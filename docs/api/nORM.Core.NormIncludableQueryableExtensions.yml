### YamlMime:ManagedReference
items:
- uid: nORM.Core.NormIncludableQueryableExtensions
  commentId: T:nORM.Core.NormIncludableQueryableExtensions
  id: NormIncludableQueryableExtensions
  parent: nORM.Core
  children:
  - nORM.Core.NormIncludableQueryableExtensions.ThenInclude``3(nORM.Core.INormIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  - nORM.Core.NormIncludableQueryableExtensions.ThenInclude``3(nORM.Core.INormIncludableQueryable{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  langs:
  - csharp
  - vb
  name: NormIncludableQueryableExtensions
  nameWithType: NormIncludableQueryableExtensions
  fullName: nORM.Core.NormIncludableQueryableExtensions
  type: Class
  source:
    remote:
      path: src/nORM/Core/NormQueryable.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: NormIncludableQueryableExtensions
    path: src/nORM/Core/NormQueryable.cs
    startLine: 219
  assemblies:
  - nORM
  namespace: nORM.Core
  syntax:
    content: public static class NormIncludableQueryableExtensions
    content.vb: Public Module NormIncludableQueryableExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: nORM.Core.NormIncludableQueryableExtensions.ThenInclude``3(nORM.Core.INormIncludableQueryable{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  commentId: M:nORM.Core.NormIncludableQueryableExtensions.ThenInclude``3(nORM.Core.INormIncludableQueryable{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  id: ThenInclude``3(nORM.Core.INormIncludableQueryable{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  isExtensionMethod: true
  parent: nORM.Core.NormIncludableQueryableExtensions
  langs:
  - csharp
  - vb
  name: ThenInclude<TEntity, TPreviousProperty, TProperty>(INormIncludableQueryable<TEntity, TPreviousProperty>, Expression<Func<TPreviousProperty, TProperty>>)
  nameWithType: NormIncludableQueryableExtensions.ThenInclude<TEntity, TPreviousProperty, TProperty>(INormIncludableQueryable<TEntity, TPreviousProperty>, Expression<Func<TPreviousProperty, TProperty>>)
  fullName: nORM.Core.NormIncludableQueryableExtensions.ThenInclude<TEntity, TPreviousProperty, TProperty>(nORM.Core.INormIncludableQueryable<TEntity, TPreviousProperty>, System.Linq.Expressions.Expression<System.Func<TPreviousProperty, TProperty>>)
  type: Method
  source:
    remote:
      path: src/nORM/Core/NormQueryable.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: ThenInclude
    path: src/nORM/Core/NormQueryable.cs
    startLine: 221
  assemblies:
  - nORM
  namespace: nORM.Core
  syntax:
    content: 'public static INormIncludableQueryable<TEntity, TProperty> ThenInclude<TEntity, TPreviousProperty, TProperty>(this INormIncludableQueryable<TEntity, TPreviousProperty> source, Expression<Func<TPreviousProperty, TProperty>> path) where TEntity : class, new()'
    parameters:
    - id: source
      type: nORM.Core.INormIncludableQueryable{{TEntity},{TPreviousProperty}}
    - id: path
      type: System.Linq.Expressions.Expression{System.Func{{TPreviousProperty},{TProperty}}}
    typeParameters:
    - id: TEntity
    - id: TPreviousProperty
    - id: TProperty
    return:
      type: nORM.Core.INormIncludableQueryable{{TEntity},{TProperty}}
    content.vb: Public Shared Function ThenInclude(Of TEntity As {Class, New}, TPreviousProperty, TProperty)(source As INormIncludableQueryable(Of TEntity, TPreviousProperty), path As Expression(Of Func(Of TPreviousProperty, TProperty))) As INormIncludableQueryable(Of TEntity, TProperty)
  overload: nORM.Core.NormIncludableQueryableExtensions.ThenInclude*
  nameWithType.vb: NormIncludableQueryableExtensions.ThenInclude(Of TEntity, TPreviousProperty, TProperty)(INormIncludableQueryable(Of TEntity, TPreviousProperty), Expression(Of Func(Of TPreviousProperty, TProperty)))
  fullName.vb: nORM.Core.NormIncludableQueryableExtensions.ThenInclude(Of TEntity, TPreviousProperty, TProperty)(nORM.Core.INormIncludableQueryable(Of TEntity, TPreviousProperty), System.Linq.Expressions.Expression(Of System.Func(Of TPreviousProperty, TProperty)))
  name.vb: ThenInclude(Of TEntity, TPreviousProperty, TProperty)(INormIncludableQueryable(Of TEntity, TPreviousProperty), Expression(Of Func(Of TPreviousProperty, TProperty)))
- uid: nORM.Core.NormIncludableQueryableExtensions.ThenInclude``3(nORM.Core.INormIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  commentId: M:nORM.Core.NormIncludableQueryableExtensions.ThenInclude``3(nORM.Core.INormIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  id: ThenInclude``3(nORM.Core.INormIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  isExtensionMethod: true
  parent: nORM.Core.NormIncludableQueryableExtensions
  langs:
  - csharp
  - vb
  name: ThenInclude<TEntity, TPreviousProperty, TProperty>(INormIncludableQueryable<TEntity, IEnumerable<TPreviousProperty>>, Expression<Func<TPreviousProperty, TProperty>>)
  nameWithType: NormIncludableQueryableExtensions.ThenInclude<TEntity, TPreviousProperty, TProperty>(INormIncludableQueryable<TEntity, IEnumerable<TPreviousProperty>>, Expression<Func<TPreviousProperty, TProperty>>)
  fullName: nORM.Core.NormIncludableQueryableExtensions.ThenInclude<TEntity, TPreviousProperty, TProperty>(nORM.Core.INormIncludableQueryable<TEntity, System.Collections.Generic.IEnumerable<TPreviousProperty>>, System.Linq.Expressions.Expression<System.Func<TPreviousProperty, TProperty>>)
  type: Method
  source:
    remote:
      path: src/nORM/Core/NormQueryable.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: ThenInclude
    path: src/nORM/Core/NormQueryable.cs
    startLine: 233
  assemblies:
  - nORM
  namespace: nORM.Core
  syntax:
    content: 'public static INormIncludableQueryable<TEntity, TProperty> ThenInclude<TEntity, TPreviousProperty, TProperty>(this INormIncludableQueryable<TEntity, IEnumerable<TPreviousProperty>> source, Expression<Func<TPreviousProperty, TProperty>> path) where TEntity : class, new()'
    parameters:
    - id: source
      type: nORM.Core.INormIncludableQueryable{{TEntity},System.Collections.Generic.IEnumerable{{TPreviousProperty}}}
    - id: path
      type: System.Linq.Expressions.Expression{System.Func{{TPreviousProperty},{TProperty}}}
    typeParameters:
    - id: TEntity
    - id: TPreviousProperty
    - id: TProperty
    return:
      type: nORM.Core.INormIncludableQueryable{{TEntity},{TProperty}}
    content.vb: Public Shared Function ThenInclude(Of TEntity As {Class, New}, TPreviousProperty, TProperty)(source As INormIncludableQueryable(Of TEntity, IEnumerable(Of TPreviousProperty)), path As Expression(Of Func(Of TPreviousProperty, TProperty))) As INormIncludableQueryable(Of TEntity, TProperty)
  overload: nORM.Core.NormIncludableQueryableExtensions.ThenInclude*
  nameWithType.vb: NormIncludableQueryableExtensions.ThenInclude(Of TEntity, TPreviousProperty, TProperty)(INormIncludableQueryable(Of TEntity, IEnumerable(Of TPreviousProperty)), Expression(Of Func(Of TPreviousProperty, TProperty)))
  fullName.vb: nORM.Core.NormIncludableQueryableExtensions.ThenInclude(Of TEntity, TPreviousProperty, TProperty)(nORM.Core.INormIncludableQueryable(Of TEntity, System.Collections.Generic.IEnumerable(Of TPreviousProperty)), System.Linq.Expressions.Expression(Of System.Func(Of TPreviousProperty, TProperty)))
  name.vb: ThenInclude(Of TEntity, TPreviousProperty, TProperty)(INormIncludableQueryable(Of TEntity, IEnumerable(Of TPreviousProperty)), Expression(Of Func(Of TPreviousProperty, TProperty)))
references:
- uid: nORM.Core
  commentId: N:nORM.Core
  href: nORM.html
  name: nORM.Core
  nameWithType: nORM.Core
  fullName: nORM.Core
  spec.csharp:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Core
    name: Core
    href: nORM.Core.html
  spec.vb:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Core
    name: Core
    href: nORM.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: nORM.Core.NormIncludableQueryableExtensions.ThenInclude*
  commentId: Overload:nORM.Core.NormIncludableQueryableExtensions.ThenInclude
  href: nORM.Core.NormIncludableQueryableExtensions.html#nORM_Core_NormIncludableQueryableExtensions_ThenInclude__3_nORM_Core_INormIncludableQueryable___0___1__System_Linq_Expressions_Expression_System_Func___1___2___
  name: ThenInclude
  nameWithType: NormIncludableQueryableExtensions.ThenInclude
  fullName: nORM.Core.NormIncludableQueryableExtensions.ThenInclude
- uid: nORM.Core.INormIncludableQueryable{{TEntity},{TPreviousProperty}}
  commentId: T:nORM.Core.INormIncludableQueryable{``0,``1}
  parent: nORM.Core
  definition: nORM.Core.INormIncludableQueryable`2
  href: nORM.Core.INormIncludableQueryable-2.html
  name: INormIncludableQueryable<TEntity, TPreviousProperty>
  nameWithType: INormIncludableQueryable<TEntity, TPreviousProperty>
  fullName: nORM.Core.INormIncludableQueryable<TEntity, TPreviousProperty>
  nameWithType.vb: INormIncludableQueryable(Of TEntity, TPreviousProperty)
  fullName.vb: nORM.Core.INormIncludableQueryable(Of TEntity, TPreviousProperty)
  name.vb: INormIncludableQueryable(Of TEntity, TPreviousProperty)
  spec.csharp:
  - uid: nORM.Core.INormIncludableQueryable`2
    name: INormIncludableQueryable
    href: nORM.Core.INormIncludableQueryable-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPreviousProperty
  - name: '>'
  spec.vb:
  - uid: nORM.Core.INormIncludableQueryable`2
    name: INormIncludableQueryable
    href: nORM.Core.INormIncludableQueryable-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TPreviousProperty
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TPreviousProperty},{TProperty}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``1,``2}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TPreviousProperty, TProperty>>
  nameWithType: Expression<Func<TPreviousProperty, TProperty>>
  fullName: System.Linq.Expressions.Expression<System.Func<TPreviousProperty, TProperty>>
  nameWithType.vb: Expression(Of Func(Of TPreviousProperty, TProperty))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TPreviousProperty, TProperty))
  name.vb: Expression(Of Func(Of TPreviousProperty, TProperty))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TPreviousProperty
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TPreviousProperty
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
- uid: nORM.Core.INormIncludableQueryable{{TEntity},{TProperty}}
  commentId: T:nORM.Core.INormIncludableQueryable{``0,``2}
  parent: nORM.Core
  definition: nORM.Core.INormIncludableQueryable`2
  href: nORM.Core.INormIncludableQueryable-2.html
  name: INormIncludableQueryable<TEntity, TProperty>
  nameWithType: INormIncludableQueryable<TEntity, TProperty>
  fullName: nORM.Core.INormIncludableQueryable<TEntity, TProperty>
  nameWithType.vb: INormIncludableQueryable(Of TEntity, TProperty)
  fullName.vb: nORM.Core.INormIncludableQueryable(Of TEntity, TProperty)
  name.vb: INormIncludableQueryable(Of TEntity, TProperty)
  spec.csharp:
  - uid: nORM.Core.INormIncludableQueryable`2
    name: INormIncludableQueryable
    href: nORM.Core.INormIncludableQueryable-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  spec.vb:
  - uid: nORM.Core.INormIncludableQueryable`2
    name: INormIncludableQueryable
    href: nORM.Core.INormIncludableQueryable-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
- uid: nORM.Core.INormIncludableQueryable`2
  commentId: T:nORM.Core.INormIncludableQueryable`2
  href: nORM.Core.INormIncludableQueryable-2.html
  name: INormIncludableQueryable<TEntity, TProperty>
  nameWithType: INormIncludableQueryable<TEntity, TProperty>
  fullName: nORM.Core.INormIncludableQueryable<TEntity, TProperty>
  nameWithType.vb: INormIncludableQueryable(Of TEntity, TProperty)
  fullName.vb: nORM.Core.INormIncludableQueryable(Of TEntity, TProperty)
  name.vb: INormIncludableQueryable(Of TEntity, TProperty)
  spec.csharp:
  - uid: nORM.Core.INormIncludableQueryable`2
    name: INormIncludableQueryable
    href: nORM.Core.INormIncludableQueryable-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  spec.vb:
  - uid: nORM.Core.INormIncludableQueryable`2
    name: INormIncludableQueryable
    href: nORM.Core.INormIncludableQueryable-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: nORM.Core.INormIncludableQueryable{{TEntity},System.Collections.Generic.IEnumerable{{TPreviousProperty}}}
  commentId: T:nORM.Core.INormIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}}
  parent: nORM.Core
  definition: nORM.Core.INormIncludableQueryable`2
  href: nORM.Core.INormIncludableQueryable-2.html
  name: INormIncludableQueryable<TEntity, IEnumerable<TPreviousProperty>>
  nameWithType: INormIncludableQueryable<TEntity, IEnumerable<TPreviousProperty>>
  fullName: nORM.Core.INormIncludableQueryable<TEntity, System.Collections.Generic.IEnumerable<TPreviousProperty>>
  nameWithType.vb: INormIncludableQueryable(Of TEntity, IEnumerable(Of TPreviousProperty))
  fullName.vb: nORM.Core.INormIncludableQueryable(Of TEntity, System.Collections.Generic.IEnumerable(Of TPreviousProperty))
  name.vb: INormIncludableQueryable(Of TEntity, IEnumerable(Of TPreviousProperty))
  spec.csharp:
  - uid: nORM.Core.INormIncludableQueryable`2
    name: INormIncludableQueryable
    href: nORM.Core.INormIncludableQueryable-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TPreviousProperty
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: nORM.Core.INormIncludableQueryable`2
    name: INormIncludableQueryable
    href: nORM.Core.INormIncludableQueryable-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TPreviousProperty
  - name: )
  - name: )
