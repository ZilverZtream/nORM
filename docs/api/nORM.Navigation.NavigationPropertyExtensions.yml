### YamlMime:ManagedReference
items:
- uid: nORM.Navigation.NavigationPropertyExtensions
  commentId: T:nORM.Navigation.NavigationPropertyExtensions
  id: NavigationPropertyExtensions
  parent: nORM.Navigation
  children:
  - nORM.Navigation.NavigationPropertyExtensions.CleanupNavigationContext``1(``0)
  - nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  - nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  - nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: NavigationPropertyExtensions
  nameWithType: NavigationPropertyExtensions
  fullName: nORM.Navigation.NavigationPropertyExtensions
  type: Class
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: NavigationPropertyExtensions
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 25
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: >-
    Advanced navigation property system with lazy loading, change tracking, and performance optimization

    Provides EF Core-like experience without sacrificing nORM's performance characteristics
  example: []
  syntax:
    content: public static class NavigationPropertyExtensions
    content.vb: Public Module NavigationPropertyExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  id: EnableLazyLoading``1(``0,nORM.Core.DbContext)
  isExtensionMethod: true
  parent: nORM.Navigation.NavigationPropertyExtensions
  langs:
  - csharp
  - vb
  name: EnableLazyLoading<T>(T, DbContext)
  nameWithType: NavigationPropertyExtensions.EnableLazyLoading<T>(T, DbContext)
  fullName: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading<T>(T, nORM.Core.DbContext)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: EnableLazyLoading
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 43
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Enables lazy loading for an entity instance
  example: []
  syntax:
    content: 'public static T EnableLazyLoading<T>(this T entity, DbContext context) where T : class'
    parameters:
    - id: entity
      type: '{T}'
    - id: context
      type: nORM.Core.DbContext
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function EnableLazyLoading(Of T As Class)(entity As T, context As DbContext) As T
  overload: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading*
  nameWithType.vb: NavigationPropertyExtensions.EnableLazyLoading(Of T)(T, DbContext)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading(Of T)(T, nORM.Core.DbContext)
  name.vb: EnableLazyLoading(Of T)(T, DbContext)
- uid: nORM.Navigation.NavigationPropertyExtensions.CleanupNavigationContext``1(``0)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.CleanupNavigationContext``1(``0)
  id: CleanupNavigationContext``1(``0)
  parent: nORM.Navigation.NavigationPropertyExtensions
  langs:
  - csharp
  - vb
  name: CleanupNavigationContext<T>(T)
  nameWithType: NavigationPropertyExtensions.CleanupNavigationContext<T>(T)
  fullName: nORM.Navigation.NavigationPropertyExtensions.CleanupNavigationContext<T>(T)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: CleanupNavigationContext
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 58
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Removes navigation context tracking for an entity and cleans up lazy proxies.
  example: []
  syntax:
    content: 'public static void CleanupNavigationContext<T>(T entity) where T : class'
    parameters:
    - id: entity
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub CleanupNavigationContext(Of T As Class)(entity As T)
  overload: nORM.Navigation.NavigationPropertyExtensions.CleanupNavigationContext*
  nameWithType.vb: NavigationPropertyExtensions.CleanupNavigationContext(Of T)(T)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.CleanupNavigationContext(Of T)(T)
  name.vb: CleanupNavigationContext(Of T)(T)
- uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  id: LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: nORM.Navigation.NavigationPropertyExtensions
  langs:
  - csharp
  - vb
  name: LoadAsync<T, TProperty>(T, Expression<Func<T, TProperty?>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, Expression<Func<T, TProperty?>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, TProperty?>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: LoadAsync
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 79
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Loads a navigation property explicitly
  example: []
  syntax:
    content: 'public static Task LoadAsync<T, TProperty>(this T entity, Expression<Func<T, TProperty?>> navigationProperty, CancellationToken ct = default) where T : class where TProperty : class'
    parameters:
    - id: entity
      type: '{T}'
    - id: navigationProperty
      type: System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}}
    - id: ct
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    - id: TProperty
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function LoadAsync(Of T As Class, TProperty As Class)(entity As T, navigationProperty As Expression(Of Func(Of T, TProperty)), ct As CancellationToken = Nothing) As Task
  overload: nORM.Navigation.NavigationPropertyExtensions.LoadAsync*
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)), CancellationToken)
- uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  id: LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: nORM.Navigation.NavigationPropertyExtensions
  langs:
  - csharp
  - vb
  name: LoadAsync<T, TProperty>(T, Expression<Func<T, ICollection<TProperty>?>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, Expression<Func<T, ICollection<TProperty>?>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.ICollection<TProperty>?>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: LoadAsync
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 97
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Loads a collection navigation property explicitly
  example: []
  syntax:
    content: 'public static Task LoadAsync<T, TProperty>(this T entity, Expression<Func<T, ICollection<TProperty>?>> navigationProperty, CancellationToken ct = default) where T : class where TProperty : class'
    parameters:
    - id: entity
      type: '{T}'
    - id: navigationProperty
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Collections.Generic.ICollection{{TProperty}}}}
    - id: ct
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    - id: TProperty
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function LoadAsync(Of T As Class, TProperty As Class)(entity As T, navigationProperty As Expression(Of Func(Of T, ICollection(Of TProperty))), ct As CancellationToken = Nothing) As Task
  overload: nORM.Navigation.NavigationPropertyExtensions.LoadAsync*
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, ICollection(Of TProperty))), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.ICollection(Of TProperty))), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, ICollection(Of TProperty))), CancellationToken)
- uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExtensionMethod: true
  parent: nORM.Navigation.NavigationPropertyExtensions
  langs:
  - csharp
  - vb
  name: IsLoaded<T, TProperty>(T, Expression<Func<T, TProperty?>>)
  nameWithType: NavigationPropertyExtensions.IsLoaded<T, TProperty>(T, Expression<Func<T, TProperty?>>)
  fullName: nORM.Navigation.NavigationPropertyExtensions.IsLoaded<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, TProperty?>>)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: IsLoaded
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 115
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Checks if a navigation property is loaded
  example: []
  syntax:
    content: 'public static bool IsLoaded<T, TProperty>(this T entity, Expression<Func<T, TProperty?>> navigationProperty) where T : class'
    parameters:
    - id: entity
      type: '{T}'
    - id: navigationProperty
      type: System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}}
    typeParameters:
    - id: T
    - id: TProperty
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsLoaded(Of T As Class, TProperty)(entity As T, navigationProperty As Expression(Of Func(Of T, TProperty))) As Boolean
  overload: nORM.Navigation.NavigationPropertyExtensions.IsLoaded*
  nameWithType.vb: NavigationPropertyExtensions.IsLoaded(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)))
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.IsLoaded(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: IsLoaded(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)))
references:
- uid: nORM.Navigation
  commentId: N:nORM.Navigation
  href: nORM.html
  name: nORM.Navigation
  nameWithType: nORM.Navigation
  fullName: nORM.Navigation
  spec.csharp:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Navigation
    name: Navigation
    href: nORM.Navigation.html
  spec.vb:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Navigation
    name: Navigation
    href: nORM.Navigation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading*
  commentId: Overload:nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  name: EnableLazyLoading
  nameWithType: NavigationPropertyExtensions.EnableLazyLoading
  fullName: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: nORM.Core.DbContext
  commentId: T:nORM.Core.DbContext
  parent: nORM.Core
  href: nORM.Core.DbContext.html
  name: DbContext
  nameWithType: DbContext
  fullName: nORM.Core.DbContext
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: nORM.Core
  commentId: N:nORM.Core
  href: nORM.html
  name: nORM.Core
  nameWithType: nORM.Core
  fullName: nORM.Core
  spec.csharp:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Core
    name: Core
    href: nORM.Core.html
  spec.vb:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Core
    name: Core
    href: nORM.Core.html
- uid: nORM.Navigation.NavigationPropertyExtensions.CleanupNavigationContext*
  commentId: Overload:nORM.Navigation.NavigationPropertyExtensions.CleanupNavigationContext
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_CleanupNavigationContext__1___0_
  name: CleanupNavigationContext
  nameWithType: NavigationPropertyExtensions.CleanupNavigationContext
  fullName: nORM.Navigation.NavigationPropertyExtensions.CleanupNavigationContext
- uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync*
  commentId: Overload:nORM.Navigation.NavigationPropertyExtensions.LoadAsync
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  name: LoadAsync
  nameWithType: NavigationPropertyExtensions.LoadAsync
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync
- uid: System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<T, TProperty>>
  nameWithType: Expression<Func<T, TProperty>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, TProperty>>
  nameWithType.vb: Expression(Of Func(Of T, TProperty))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty))
  name.vb: Expression(Of Func(Of T, TProperty))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Linq.Expressions.Expression{System.Func{{T},System.Collections.Generic.ICollection{{TProperty}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<T, ICollection<TProperty>>>
  nameWithType: Expression<Func<T, ICollection<TProperty>>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.ICollection<TProperty>>>
  nameWithType.vb: Expression(Of Func(Of T, ICollection(Of TProperty)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.ICollection(Of TProperty)))
  name.vb: Expression(Of Func(Of T, ICollection(Of TProperty)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded*
  commentId: Overload:nORM.Navigation.NavigationPropertyExtensions.IsLoaded
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  name: IsLoaded
  nameWithType: NavigationPropertyExtensions.IsLoaded
  fullName: nORM.Navigation.NavigationPropertyExtensions.IsLoaded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
