### YamlMime:ManagedReference
items:
- uid: nORM.Configuration.EntityTypeBuilder`1
  commentId: T:nORM.Configuration.EntityTypeBuilder`1
  id: EntityTypeBuilder`1
  parent: nORM.Configuration
  children:
  - nORM.Configuration.EntityTypeBuilder`1.HasKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - nORM.Configuration.EntityTypeBuilder`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  - nORM.Configuration.EntityTypeBuilder`1.OwnsOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{nORM.Configuration.EntityTypeBuilder{``0}})
  - nORM.Configuration.EntityTypeBuilder`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - nORM.Configuration.EntityTypeBuilder`1.Property``1(System.String)
  - nORM.Configuration.EntityTypeBuilder`1.SharesTableWith``1
  - nORM.Configuration.EntityTypeBuilder`1.ToTable(System.String)
  langs:
  - csharp
  - vb
  name: EntityTypeBuilder<TEntity>
  nameWithType: EntityTypeBuilder<TEntity>
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>
  type: Class
  source:
    remote:
      path: src/nORM/Configuration/EntityTypeBuilder.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: EntityTypeBuilder
    path: src/nORM/Configuration/EntityTypeBuilder.cs
    startLine: 10
  assemblies:
  - nORM
  namespace: nORM.Configuration
  syntax:
    content: 'public class EntityTypeBuilder<TEntity> where TEntity : class'
    typeParameters:
    - id: TEntity
    content.vb: Public Class EntityTypeBuilder(Of TEntity As Class)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - nORM.Configuration.EntityTypeBuilder`1.nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Core.DbContext)
  - nORM.Configuration.EntityTypeBuilder`1.nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{{TEntity}},{TProperty}}})
  - nORM.Configuration.EntityTypeBuilder`1.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{{TEntity}},System.Collections.Generic.ICollection{{TProperty}}}},System.Threading.CancellationToken)
  - nORM.Configuration.EntityTypeBuilder`1.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{{TEntity}},{TProperty}}},System.Threading.CancellationToken)
  nameWithType.vb: EntityTypeBuilder(Of TEntity)
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity)
  name.vb: EntityTypeBuilder(Of TEntity)
- uid: nORM.Configuration.EntityTypeBuilder`1.ToTable(System.String)
  commentId: M:nORM.Configuration.EntityTypeBuilder`1.ToTable(System.String)
  id: ToTable(System.String)
  parent: nORM.Configuration.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: ToTable(string)
  nameWithType: EntityTypeBuilder<TEntity>.ToTable(string)
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.ToTable(string)
  type: Method
  source:
    remote:
      path: src/nORM/Configuration/EntityTypeBuilder.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: ToTable
    path: src/nORM/Configuration/EntityTypeBuilder.cs
    startLine: 91
  assemblies:
  - nORM
  namespace: nORM.Configuration
  summary: Specifies the database table that <code class="typeparamref">TEntity</code> maps to.
  example: []
  syntax:
    content: public EntityTypeBuilder<TEntity> ToTable(string name)
    parameters:
    - id: name
      type: System.String
      description: The unqualified table name.
    return:
      type: nORM.Configuration.EntityTypeBuilder`1
      description: The same <xref href="nORM.Configuration.EntityTypeBuilder%601" data-throw-if-not-resolved="false"></xref> instance for chaining.
    content.vb: Public Function ToTable(name As String) As EntityTypeBuilder(Of TEntity)
  overload: nORM.Configuration.EntityTypeBuilder`1.ToTable*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).ToTable(String)
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).ToTable(String)
  name.vb: ToTable(String)
- uid: nORM.Configuration.EntityTypeBuilder`1.SharesTableWith``1
  commentId: M:nORM.Configuration.EntityTypeBuilder`1.SharesTableWith``1
  id: SharesTableWith``1
  parent: nORM.Configuration.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: SharesTableWith<TPrincipal>()
  nameWithType: EntityTypeBuilder<TEntity>.SharesTableWith<TPrincipal>()
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.SharesTableWith<TPrincipal>()
  type: Method
  source:
    remote:
      path: src/nORM/Configuration/EntityTypeBuilder.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: SharesTableWith
    path: src/nORM/Configuration/EntityTypeBuilder.cs
    startLine: 97
  assemblies:
  - nORM
  namespace: nORM.Configuration
  syntax:
    content: public EntityTypeBuilder<TEntity> SharesTableWith<TPrincipal>()
    typeParameters:
    - id: TPrincipal
    return:
      type: nORM.Configuration.EntityTypeBuilder`1
    content.vb: Public Function SharesTableWith(Of TPrincipal)() As EntityTypeBuilder(Of TEntity)
  overload: nORM.Configuration.EntityTypeBuilder`1.SharesTableWith*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).SharesTableWith(Of TPrincipal)()
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).SharesTableWith(Of TPrincipal)()
  name.vb: SharesTableWith(Of TPrincipal)()
- uid: nORM.Configuration.EntityTypeBuilder`1.HasKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:nORM.Configuration.EntityTypeBuilder`1.HasKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: HasKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: nORM.Configuration.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasKey(Expression<Func<TEntity, object>>)
  nameWithType: EntityTypeBuilder<TEntity>.HasKey(Expression<Func<TEntity, object>>)
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.HasKey(System.Linq.Expressions.Expression<System.Func<TEntity, object>>)
  type: Method
  source:
    remote:
      path: src/nORM/Configuration/EntityTypeBuilder.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: HasKey
    path: src/nORM/Configuration/EntityTypeBuilder.cs
    startLine: 108
  assemblies:
  - nORM
  namespace: nORM.Configuration
  summary: Configures one or more properties to constitute the entity's primary key.
  example: []
  syntax:
    content: public EntityTypeBuilder<TEntity> HasKey(Expression<Func<TEntity, object>> keyExpression)
    parameters:
    - id: keyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
      description: Expression selecting the key property or properties.
    return:
      type: nORM.Configuration.EntityTypeBuilder`1
      description: The same builder instance for fluent chaining.
    content.vb: Public Function HasKey(keyExpression As Expression(Of Func(Of TEntity, Object))) As EntityTypeBuilder(Of TEntity)
  overload: nORM.Configuration.EntityTypeBuilder`1.HasKey*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasKey(Expression(Of Func(Of TEntity, Object)))
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).HasKey(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object)))
  name.vb: HasKey(Expression(Of Func(Of TEntity, Object)))
- uid: nORM.Configuration.EntityTypeBuilder`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:nORM.Configuration.EntityTypeBuilder`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Property(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: nORM.Configuration.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: Property(Expression<Func<TEntity, object>>)
  nameWithType: EntityTypeBuilder<TEntity>.Property(Expression<Func<TEntity, object>>)
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.Property(System.Linq.Expressions.Expression<System.Func<TEntity, object>>)
  type: Method
  source:
    remote:
      path: src/nORM/Configuration/EntityTypeBuilder.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Property
    path: src/nORM/Configuration/EntityTypeBuilder.cs
    startLine: 131
  assemblies:
  - nORM
  namespace: nORM.Configuration
  summary: Begins configuration for the specified property.
  example: []
  syntax:
    content: public EntityTypeBuilder<TEntity>.PropertyBuilder Property(Expression<Func<TEntity, object>> propertyExpression)
    parameters:
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
      description: Expression selecting the property to configure.
    return:
      type: nORM.Configuration.EntityTypeBuilder`1.PropertyBuilder
      description: A <xref href="nORM.Configuration.EntityTypeBuilder%601.PropertyBuilder" data-throw-if-not-resolved="false"></xref> for further configuration of the property.
    content.vb: Public Function [Property](propertyExpression As Expression(Of Func(Of TEntity, Object))) As EntityTypeBuilder(Of TEntity).PropertyBuilder
  overload: nORM.Configuration.EntityTypeBuilder`1.Property*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).Property(Expression(Of Func(Of TEntity, Object)))
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).Property(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object)))
  name.vb: Property(Expression(Of Func(Of TEntity, Object)))
- uid: nORM.Configuration.EntityTypeBuilder`1.Property``1(System.String)
  commentId: M:nORM.Configuration.EntityTypeBuilder`1.Property``1(System.String)
  id: Property``1(System.String)
  parent: nORM.Configuration.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: Property<TProperty>(string)
  nameWithType: EntityTypeBuilder<TEntity>.Property<TProperty>(string)
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.Property<TProperty>(string)
  type: Method
  source:
    remote:
      path: src/nORM/Configuration/EntityTypeBuilder.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Property
    path: src/nORM/Configuration/EntityTypeBuilder.cs
    startLine: 137
  assemblies:
  - nORM
  namespace: nORM.Configuration
  syntax:
    content: public EntityTypeBuilder<TEntity>.ShadowPropertyBuilder Property<TProperty>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: TProperty
    return:
      type: nORM.Configuration.EntityTypeBuilder`1.ShadowPropertyBuilder
    content.vb: Public Function [Property](Of TProperty)(name As String) As EntityTypeBuilder(Of TEntity).ShadowPropertyBuilder
  overload: nORM.Configuration.EntityTypeBuilder`1.Property*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).Property(Of TProperty)(String)
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).Property(Of TProperty)(String)
  name.vb: Property(Of TProperty)(String)
- uid: nORM.Configuration.EntityTypeBuilder`1.OwnsOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{nORM.Configuration.EntityTypeBuilder{``0}})
  commentId: M:nORM.Configuration.EntityTypeBuilder`1.OwnsOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{nORM.Configuration.EntityTypeBuilder{``0}})
  id: OwnsOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{nORM.Configuration.EntityTypeBuilder{``0}})
  parent: nORM.Configuration.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: OwnsOne<TOwned>(Expression<Func<TEntity, TOwned>>, Action<EntityTypeBuilder<TOwned>>?)
  nameWithType: EntityTypeBuilder<TEntity>.OwnsOne<TOwned>(Expression<Func<TEntity, TOwned>>, Action<EntityTypeBuilder<TOwned>>?)
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.OwnsOne<TOwned>(System.Linq.Expressions.Expression<System.Func<TEntity, TOwned>>, System.Action<nORM.Configuration.EntityTypeBuilder<TOwned>>?)
  type: Method
  source:
    remote:
      path: src/nORM/Configuration/EntityTypeBuilder.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: OwnsOne
    path: src/nORM/Configuration/EntityTypeBuilder.cs
    startLine: 143
  assemblies:
  - nORM
  namespace: nORM.Configuration
  syntax:
    content: 'public EntityTypeBuilder<TEntity> OwnsOne<TOwned>(Expression<Func<TEntity, TOwned>> navigation, Action<EntityTypeBuilder<TOwned>>? buildAction = null) where TOwned : class'
    parameters:
    - id: navigation
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},{TOwned}}}
    - id: buildAction
      type: System.Action{nORM.Configuration.EntityTypeBuilder{{TOwned}}}
    typeParameters:
    - id: TOwned
    return:
      type: nORM.Configuration.EntityTypeBuilder`1
    content.vb: Public Function OwnsOne(Of TOwned As Class)(navigation As Expression(Of Func(Of TEntity, TOwned)), buildAction As Action(Of EntityTypeBuilder(Of TOwned)) = Nothing) As EntityTypeBuilder(Of TEntity)
  overload: nORM.Configuration.EntityTypeBuilder`1.OwnsOne*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).OwnsOne(Of TOwned)(Expression(Of Func(Of TEntity, TOwned)), Action(Of EntityTypeBuilder(Of TOwned)))
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).OwnsOne(Of TOwned)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOwned)), System.Action(Of nORM.Configuration.EntityTypeBuilder(Of TOwned)))
  name.vb: OwnsOne(Of TOwned)(Expression(Of Func(Of TEntity, TOwned)), Action(Of EntityTypeBuilder(Of TOwned)))
- uid: nORM.Configuration.EntityTypeBuilder`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:nORM.Configuration.EntityTypeBuilder`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  id: HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  parent: nORM.Configuration.EntityTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasMany<TProperty>(Expression<Func<TEntity, IEnumerable<TProperty>>>)
  nameWithType: EntityTypeBuilder<TEntity>.HasMany<TProperty>(Expression<Func<TEntity, IEnumerable<TProperty>>>)
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.HasMany<TProperty>(System.Linq.Expressions.Expression<System.Func<TEntity, System.Collections.Generic.IEnumerable<TProperty>>>)
  type: Method
  source:
    remote:
      path: src/nORM/Configuration/EntityTypeBuilder.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: HasMany
    path: src/nORM/Configuration/EntityTypeBuilder.cs
    startLine: 152
  assemblies:
  - nORM
  namespace: nORM.Configuration
  syntax:
    content: 'public EntityTypeBuilder<TEntity>.CollectionNavigationBuilder<TProperty> HasMany<TProperty>(Expression<Func<TEntity, IEnumerable<TProperty>>> navigation) where TProperty : class'
    parameters:
    - id: navigation
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Collections.Generic.IEnumerable{{TProperty}}}}
    typeParameters:
    - id: TProperty
    return:
      type: nORM.Configuration.EntityTypeBuilder`1.CollectionNavigationBuilder{{TProperty}}
    content.vb: Public Function HasMany(Of TProperty As Class)(navigation As Expression(Of Func(Of TEntity, IEnumerable(Of TProperty)))) As EntityTypeBuilder(Of TEntity).CollectionNavigationBuilder(Of TProperty)
  overload: nORM.Configuration.EntityTypeBuilder`1.HasMany*
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasMany(Of TProperty)(Expression(Of Func(Of TEntity, IEnumerable(Of TProperty))))
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).HasMany(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Collections.Generic.IEnumerable(Of TProperty))))
  name.vb: HasMany(Of TProperty)(Expression(Of Func(Of TEntity, IEnumerable(Of TProperty))))
references:
- uid: nORM.Configuration
  commentId: N:nORM.Configuration
  href: nORM.html
  name: nORM.Configuration
  nameWithType: nORM.Configuration
  fullName: nORM.Configuration
  spec.csharp:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Configuration
    name: Configuration
    href: nORM.Configuration.html
  spec.vb:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Configuration
    name: Configuration
    href: nORM.Configuration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: nORM.Configuration.EntityTypeBuilder`1.nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Core.DbContext)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  name: EnableLazyLoading<EntityTypeBuilder<TEntity>>(EntityTypeBuilder<TEntity>, DbContext)
  nameWithType: NavigationPropertyExtensions.EnableLazyLoading<EntityTypeBuilder<TEntity>>(EntityTypeBuilder<TEntity>, DbContext)
  fullName: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading<nORM.Configuration.EntityTypeBuilder<TEntity>>(nORM.Configuration.EntityTypeBuilder<TEntity>, nORM.Core.DbContext)
  nameWithType.vb: NavigationPropertyExtensions.EnableLazyLoading(Of EntityTypeBuilder(Of TEntity))(EntityTypeBuilder(Of TEntity), DbContext)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading(Of nORM.Configuration.EntityTypeBuilder(Of TEntity))(nORM.Configuration.EntityTypeBuilder(Of TEntity), nORM.Core.DbContext)
  name.vb: EnableLazyLoading(Of EntityTypeBuilder(Of TEntity))(EntityTypeBuilder(Of TEntity), DbContext)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Configuration.EntityTypeBuilder{`0},nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: <
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: (
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Configuration.EntityTypeBuilder{`0},nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: (
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
- uid: nORM.Configuration.EntityTypeBuilder`1.nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{{TEntity}},{TProperty}}})
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  name: IsLoaded<EntityTypeBuilder<TEntity>, TProperty>(EntityTypeBuilder<TEntity>, Expression<Func<EntityTypeBuilder<TEntity>, TProperty>>)
  nameWithType: NavigationPropertyExtensions.IsLoaded<EntityTypeBuilder<TEntity>, TProperty>(EntityTypeBuilder<TEntity>, Expression<Func<EntityTypeBuilder<TEntity>, TProperty>>)
  fullName: nORM.Navigation.NavigationPropertyExtensions.IsLoaded<nORM.Configuration.EntityTypeBuilder<TEntity>, TProperty>(nORM.Configuration.EntityTypeBuilder<TEntity>, System.Linq.Expressions.Expression<System.Func<nORM.Configuration.EntityTypeBuilder<TEntity>, TProperty>>)
  nameWithType.vb: NavigationPropertyExtensions.IsLoaded(Of EntityTypeBuilder(Of TEntity), TProperty)(EntityTypeBuilder(Of TEntity), Expression(Of Func(Of EntityTypeBuilder(Of TEntity), TProperty)))
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.IsLoaded(Of nORM.Configuration.EntityTypeBuilder(Of TEntity), TProperty)(nORM.Configuration.EntityTypeBuilder(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of nORM.Configuration.EntityTypeBuilder(Of TEntity), TProperty)))
  name.vb: IsLoaded(Of EntityTypeBuilder(Of TEntity), TProperty)(EntityTypeBuilder(Of TEntity), Expression(Of Func(Of EntityTypeBuilder(Of TEntity), TProperty)))
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(nORM.Configuration.EntityTypeBuilder{`0},System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{`0},``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: <
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(nORM.Configuration.EntityTypeBuilder{`0},System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{`0},``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: nORM.Configuration.EntityTypeBuilder`1.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{{TEntity}},System.Collections.Generic.ICollection{{TProperty}}}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  name: LoadAsync<EntityTypeBuilder<TEntity>, TProperty>(EntityTypeBuilder<TEntity>, Expression<Func<EntityTypeBuilder<TEntity>, ICollection<TProperty>>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<EntityTypeBuilder<TEntity>, TProperty>(EntityTypeBuilder<TEntity>, Expression<Func<EntityTypeBuilder<TEntity>, ICollection<TProperty>>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<nORM.Configuration.EntityTypeBuilder<TEntity>, TProperty>(nORM.Configuration.EntityTypeBuilder<TEntity>, System.Linq.Expressions.Expression<System.Func<nORM.Configuration.EntityTypeBuilder<TEntity>, System.Collections.Generic.ICollection<TProperty>>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of EntityTypeBuilder(Of TEntity), TProperty)(EntityTypeBuilder(Of TEntity), Expression(Of Func(Of EntityTypeBuilder(Of TEntity), ICollection(Of TProperty))), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of nORM.Configuration.EntityTypeBuilder(Of TEntity), TProperty)(nORM.Configuration.EntityTypeBuilder(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of nORM.Configuration.EntityTypeBuilder(Of TEntity), System.Collections.Generic.ICollection(Of TProperty))), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of EntityTypeBuilder(Of TEntity), TProperty)(EntityTypeBuilder(Of TEntity), Expression(Of Func(Of EntityTypeBuilder(Of TEntity), ICollection(Of TProperty))), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Configuration.EntityTypeBuilder{`0},System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{`0},System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: <
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Configuration.EntityTypeBuilder{`0},System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{`0},System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: nORM.Configuration.EntityTypeBuilder`1.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{{TEntity}},{TProperty}}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  name: LoadAsync<EntityTypeBuilder<TEntity>, TProperty>(EntityTypeBuilder<TEntity>, Expression<Func<EntityTypeBuilder<TEntity>, TProperty>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<EntityTypeBuilder<TEntity>, TProperty>(EntityTypeBuilder<TEntity>, Expression<Func<EntityTypeBuilder<TEntity>, TProperty>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<nORM.Configuration.EntityTypeBuilder<TEntity>, TProperty>(nORM.Configuration.EntityTypeBuilder<TEntity>, System.Linq.Expressions.Expression<System.Func<nORM.Configuration.EntityTypeBuilder<TEntity>, TProperty>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of EntityTypeBuilder(Of TEntity), TProperty)(EntityTypeBuilder(Of TEntity), Expression(Of Func(Of EntityTypeBuilder(Of TEntity), TProperty)), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of nORM.Configuration.EntityTypeBuilder(Of TEntity), TProperty)(nORM.Configuration.EntityTypeBuilder(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of nORM.Configuration.EntityTypeBuilder(Of TEntity), TProperty)), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of EntityTypeBuilder(Of TEntity), TProperty)(EntityTypeBuilder(Of TEntity), Expression(Of Func(Of EntityTypeBuilder(Of TEntity), TProperty)), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Configuration.EntityTypeBuilder{`0},System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{`0},``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: <
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Configuration.EntityTypeBuilder{`0},System.Linq.Expressions.Expression{System.Func{nORM.Configuration.EntityTypeBuilder{`0},``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  name: EnableLazyLoading<T>(T, DbContext)
  nameWithType: NavigationPropertyExtensions.EnableLazyLoading<T>(T, DbContext)
  fullName: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading<T>(T, nORM.Core.DbContext)
  nameWithType.vb: NavigationPropertyExtensions.EnableLazyLoading(Of T)(T, DbContext)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading(Of T)(T, nORM.Core.DbContext)
  name.vb: EnableLazyLoading(Of T)(T, DbContext)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
- uid: nORM.Navigation.NavigationPropertyExtensions
  commentId: T:nORM.Navigation.NavigationPropertyExtensions
  parent: nORM.Navigation
  href: nORM.Navigation.NavigationPropertyExtensions.html
  name: NavigationPropertyExtensions
  nameWithType: NavigationPropertyExtensions
  fullName: nORM.Navigation.NavigationPropertyExtensions
- uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExternal: true
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  name: IsLoaded<T, TProperty>(T, Expression<Func<T, TProperty>>)
  nameWithType: NavigationPropertyExtensions.IsLoaded<T, TProperty>(T, Expression<Func<T, TProperty>>)
  fullName: nORM.Navigation.NavigationPropertyExtensions.IsLoaded<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: NavigationPropertyExtensions.IsLoaded(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)))
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.IsLoaded(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: IsLoaded(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  isExternal: true
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  name: LoadAsync<T, TProperty>(T, Expression<Func<T, ICollection<TProperty>>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, Expression<Func<T, ICollection<TProperty>>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.ICollection<TProperty>>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, ICollection(Of TProperty))), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.ICollection(Of TProperty))), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, ICollection(Of TProperty))), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  isExternal: true
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  name: LoadAsync<T, TProperty>(T, Expression<Func<T, TProperty>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, Expression<Func<T, TProperty>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: nORM.Navigation
  commentId: N:nORM.Navigation
  href: nORM.html
  name: nORM.Navigation
  nameWithType: nORM.Navigation
  fullName: nORM.Navigation
  spec.csharp:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Navigation
    name: Navigation
    href: nORM.Navigation.html
  spec.vb:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Navigation
    name: Navigation
    href: nORM.Navigation.html
- uid: nORM.Configuration.EntityTypeBuilder`1
  commentId: T:nORM.Configuration.EntityTypeBuilder`1
  parent: nORM.Configuration
  href: nORM.Configuration.EntityTypeBuilder-1.html
  name: EntityTypeBuilder<TEntity>
  nameWithType: EntityTypeBuilder<TEntity>
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>
  nameWithType.vb: EntityTypeBuilder(Of TEntity)
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity)
  name.vb: EntityTypeBuilder(Of TEntity)
  spec.csharp:
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: nORM.Configuration.EntityTypeBuilder`1.ToTable*
  commentId: Overload:nORM.Configuration.EntityTypeBuilder`1.ToTable
  href: nORM.Configuration.EntityTypeBuilder-1.html#nORM_Configuration_EntityTypeBuilder_1_ToTable_System_String_
  name: ToTable
  nameWithType: EntityTypeBuilder<TEntity>.ToTable
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.ToTable
  nameWithType.vb: EntityTypeBuilder(Of TEntity).ToTable
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).ToTable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: nORM.Configuration.EntityTypeBuilder`1.SharesTableWith*
  commentId: Overload:nORM.Configuration.EntityTypeBuilder`1.SharesTableWith
  href: nORM.Configuration.EntityTypeBuilder-1.html#nORM_Configuration_EntityTypeBuilder_1_SharesTableWith__1
  name: SharesTableWith
  nameWithType: EntityTypeBuilder<TEntity>.SharesTableWith
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.SharesTableWith
  nameWithType.vb: EntityTypeBuilder(Of TEntity).SharesTableWith
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).SharesTableWith
- uid: nORM.Configuration.EntityTypeBuilder`1.HasKey*
  commentId: Overload:nORM.Configuration.EntityTypeBuilder`1.HasKey
  href: nORM.Configuration.EntityTypeBuilder-1.html#nORM_Configuration_EntityTypeBuilder_1_HasKey_System_Linq_Expressions_Expression_System_Func__0_System_Object___
  name: HasKey
  nameWithType: EntityTypeBuilder<TEntity>.HasKey
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.HasKey
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasKey
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).HasKey
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, object>>
  nameWithType: Expression<Func<TEntity, object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, object>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object))
  name.vb: Expression(Of Func(Of TEntity, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: nORM.Configuration.EntityTypeBuilder`1.PropertyBuilder
  commentId: T:nORM.Configuration.EntityTypeBuilder`1.PropertyBuilder
  parent: nORM.Configuration
  href: nORM.Configuration.EntityTypeBuilder-1.html
  name: EntityTypeBuilder<TEntity>.PropertyBuilder
  nameWithType: EntityTypeBuilder<TEntity>.PropertyBuilder
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.PropertyBuilder
  nameWithType.vb: EntityTypeBuilder(Of TEntity).PropertyBuilder
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).PropertyBuilder
  name.vb: EntityTypeBuilder(Of TEntity).PropertyBuilder
  spec.csharp:
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: .
  - uid: nORM.Configuration.EntityTypeBuilder`1.PropertyBuilder
    name: PropertyBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.PropertyBuilder.html
  spec.vb:
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: .
  - uid: nORM.Configuration.EntityTypeBuilder`1.PropertyBuilder
    name: PropertyBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.PropertyBuilder.html
- uid: nORM.Configuration.EntityTypeBuilder`1.Property*
  commentId: Overload:nORM.Configuration.EntityTypeBuilder`1.Property
  href: nORM.Configuration.EntityTypeBuilder-1.html#nORM_Configuration_EntityTypeBuilder_1_Property_System_Linq_Expressions_Expression_System_Func__0_System_Object___
  name: Property
  nameWithType: EntityTypeBuilder<TEntity>.Property
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.Property
  nameWithType.vb: EntityTypeBuilder(Of TEntity).Property
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).Property
- uid: nORM.Configuration.EntityTypeBuilder`1.ShadowPropertyBuilder
  commentId: T:nORM.Configuration.EntityTypeBuilder`1.ShadowPropertyBuilder
  parent: nORM.Configuration
  href: nORM.Configuration.EntityTypeBuilder-1.html
  name: EntityTypeBuilder<TEntity>.ShadowPropertyBuilder
  nameWithType: EntityTypeBuilder<TEntity>.ShadowPropertyBuilder
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.ShadowPropertyBuilder
  nameWithType.vb: EntityTypeBuilder(Of TEntity).ShadowPropertyBuilder
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).ShadowPropertyBuilder
  name.vb: EntityTypeBuilder(Of TEntity).ShadowPropertyBuilder
  spec.csharp:
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: .
  - uid: nORM.Configuration.EntityTypeBuilder`1.ShadowPropertyBuilder
    name: ShadowPropertyBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.ShadowPropertyBuilder.html
  spec.vb:
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: .
  - uid: nORM.Configuration.EntityTypeBuilder`1.ShadowPropertyBuilder
    name: ShadowPropertyBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.ShadowPropertyBuilder.html
- uid: nORM.Configuration.EntityTypeBuilder`1.OwnsOne*
  commentId: Overload:nORM.Configuration.EntityTypeBuilder`1.OwnsOne
  href: nORM.Configuration.EntityTypeBuilder-1.html#nORM_Configuration_EntityTypeBuilder_1_OwnsOne__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Action_nORM_Configuration_EntityTypeBuilder___0___
  name: OwnsOne
  nameWithType: EntityTypeBuilder<TEntity>.OwnsOne
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.OwnsOne
  nameWithType.vb: EntityTypeBuilder(Of TEntity).OwnsOne
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).OwnsOne
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},{TOwned}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, TOwned>>
  nameWithType: Expression<Func<TEntity, TOwned>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, TOwned>>
  nameWithType.vb: Expression(Of Func(Of TEntity, TOwned))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOwned))
  name.vb: Expression(Of Func(Of TEntity, TOwned))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOwned
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOwned
  - name: )
  - name: )
- uid: System.Action{nORM.Configuration.EntityTypeBuilder{{TOwned}}}
  commentId: T:System.Action{nORM.Configuration.EntityTypeBuilder{``0}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<EntityTypeBuilder<TOwned>>
  nameWithType: Action<EntityTypeBuilder<TOwned>>
  fullName: System.Action<nORM.Configuration.EntityTypeBuilder<TOwned>>
  nameWithType.vb: Action(Of EntityTypeBuilder(Of TOwned))
  fullName.vb: System.Action(Of nORM.Configuration.EntityTypeBuilder(Of TOwned))
  name.vb: Action(Of EntityTypeBuilder(Of TOwned))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TOwned
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TOwned
  - name: )
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: nORM.Configuration.EntityTypeBuilder`1.HasMany*
  commentId: Overload:nORM.Configuration.EntityTypeBuilder`1.HasMany
  href: nORM.Configuration.EntityTypeBuilder-1.html#nORM_Configuration_EntityTypeBuilder_1_HasMany__1_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IEnumerable___0____
  name: HasMany
  nameWithType: EntityTypeBuilder<TEntity>.HasMany
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.HasMany
  nameWithType.vb: EntityTypeBuilder(Of TEntity).HasMany
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).HasMany
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Collections.Generic.IEnumerable{{TProperty}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, IEnumerable<TProperty>>>
  nameWithType: Expression<Func<TEntity, IEnumerable<TProperty>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, System.Collections.Generic.IEnumerable<TProperty>>>
  nameWithType.vb: Expression(Of Func(Of TEntity, IEnumerable(Of TProperty)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Collections.Generic.IEnumerable(Of TProperty)))
  name.vb: Expression(Of Func(Of TEntity, IEnumerable(Of TProperty)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: nORM.Configuration.EntityTypeBuilder`1.CollectionNavigationBuilder{{TProperty}}
  commentId: T:nORM.Configuration.EntityTypeBuilder`1.CollectionNavigationBuilder{``0}
  parent: nORM.Configuration
  definition: nORM.Configuration.EntityTypeBuilder`1.CollectionNavigationBuilder`1
  href: nORM.Configuration.EntityTypeBuilder-1.html
  name: EntityTypeBuilder<TEntity>.CollectionNavigationBuilder<TProperty>
  nameWithType: EntityTypeBuilder<TEntity>.CollectionNavigationBuilder<TProperty>
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.CollectionNavigationBuilder<TProperty>
  nameWithType.vb: EntityTypeBuilder(Of TEntity).CollectionNavigationBuilder(Of TProperty)
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).CollectionNavigationBuilder(Of TProperty)
  name.vb: EntityTypeBuilder(Of TEntity).CollectionNavigationBuilder(Of TProperty)
  spec.csharp:
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: .
  - uid: nORM.Configuration.EntityTypeBuilder`1.CollectionNavigationBuilder`1
    name: CollectionNavigationBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.CollectionNavigationBuilder-1.html
  - name: <
  - name: TProperty
  - name: '>'
  spec.vb:
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: .
  - uid: nORM.Configuration.EntityTypeBuilder`1.CollectionNavigationBuilder`1
    name: CollectionNavigationBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.CollectionNavigationBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
- uid: nORM.Configuration.EntityTypeBuilder`1.CollectionNavigationBuilder`1
  commentId: T:nORM.Configuration.EntityTypeBuilder`1.CollectionNavigationBuilder`1
  href: nORM.Configuration.EntityTypeBuilder-1.html
  name: EntityTypeBuilder<TEntity>.CollectionNavigationBuilder<TDependent>
  nameWithType: EntityTypeBuilder<TEntity>.CollectionNavigationBuilder<TDependent>
  fullName: nORM.Configuration.EntityTypeBuilder<TEntity>.CollectionNavigationBuilder<TDependent>
  nameWithType.vb: EntityTypeBuilder(Of TEntity).CollectionNavigationBuilder(Of TDependent)
  fullName.vb: nORM.Configuration.EntityTypeBuilder(Of TEntity).CollectionNavigationBuilder(Of TDependent)
  name.vb: EntityTypeBuilder(Of TEntity).CollectionNavigationBuilder(Of TDependent)
  spec.csharp:
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: .
  - uid: nORM.Configuration.EntityTypeBuilder`1.CollectionNavigationBuilder`1
    name: CollectionNavigationBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.CollectionNavigationBuilder-1.html
  - name: <
  - name: TDependent
  - name: '>'
  spec.vb:
  - uid: nORM.Configuration.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: .
  - uid: nORM.Configuration.EntityTypeBuilder`1.CollectionNavigationBuilder`1
    name: CollectionNavigationBuilder
    href: nORM.Configuration.EntityTypeBuilder-1.CollectionNavigationBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TDependent
  - name: )
