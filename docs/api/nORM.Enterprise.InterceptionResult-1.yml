### YamlMime:ManagedReference
items:
- uid: nORM.Enterprise.InterceptionResult`1
  commentId: T:nORM.Enterprise.InterceptionResult`1
  id: InterceptionResult`1
  parent: nORM.Enterprise
  children:
  - nORM.Enterprise.InterceptionResult`1.Continue
  - nORM.Enterprise.InterceptionResult`1.IsSuppressed
  - nORM.Enterprise.InterceptionResult`1.Result
  - nORM.Enterprise.InterceptionResult`1.SuppressWithResult(`0)
  langs:
  - csharp
  - vb
  name: InterceptionResult<T>
  nameWithType: InterceptionResult<T>
  fullName: nORM.Enterprise.InterceptionResult<T>
  type: Struct
  source:
    remote:
      path: src/nORM/Enterprise/InterceptionResult.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: InterceptionResult
    path: src/nORM/Enterprise/InterceptionResult.cs
    startLine: 11
  assemblies:
  - nORM
  namespace: nORM.Enterprise
  summary: >-
    Represents the result of an interceptor call. When <xref href="nORM.Enterprise.InterceptionResult%601.IsSuppressed" data-throw-if-not-resolved="false"></xref> is true,

    the command execution is skipped and <xref href="nORM.Enterprise.InterceptionResult%601.Result" data-throw-if-not-resolved="false"></xref> is returned instead.
  example: []
  syntax:
    content: public readonly struct InterceptionResult<T>
    typeParameters:
    - id: T
      description: Type of the result.
    content.vb: Public Structure InterceptionResult(Of T)
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: InterceptionResult(Of T)
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T)
  name.vb: InterceptionResult(Of T)
- uid: nORM.Enterprise.InterceptionResult`1.IsSuppressed
  commentId: P:nORM.Enterprise.InterceptionResult`1.IsSuppressed
  id: IsSuppressed
  parent: nORM.Enterprise.InterceptionResult`1
  langs:
  - csharp
  - vb
  name: IsSuppressed
  nameWithType: InterceptionResult<T>.IsSuppressed
  fullName: nORM.Enterprise.InterceptionResult<T>.IsSuppressed
  type: Property
  source:
    remote:
      path: src/nORM/Enterprise/InterceptionResult.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: IsSuppressed
    path: src/nORM/Enterprise/InterceptionResult.cs
    startLine: 13
  assemblies:
  - nORM
  namespace: nORM.Enterprise
  syntax:
    content: public bool IsSuppressed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSuppressed As Boolean
  overload: nORM.Enterprise.InterceptionResult`1.IsSuppressed*
  nameWithType.vb: InterceptionResult(Of T).IsSuppressed
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T).IsSuppressed
- uid: nORM.Enterprise.InterceptionResult`1.Result
  commentId: P:nORM.Enterprise.InterceptionResult`1.Result
  id: Result
  parent: nORM.Enterprise.InterceptionResult`1
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: InterceptionResult<T>.Result
  fullName: nORM.Enterprise.InterceptionResult<T>.Result
  type: Property
  source:
    remote:
      path: src/nORM/Enterprise/InterceptionResult.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Result
    path: src/nORM/Enterprise/InterceptionResult.cs
    startLine: 14
  assemblies:
  - nORM
  namespace: nORM.Enterprise
  syntax:
    content: public T Result { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Result As T
  overload: nORM.Enterprise.InterceptionResult`1.Result*
  nameWithType.vb: InterceptionResult(Of T).Result
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T).Result
- uid: nORM.Enterprise.InterceptionResult`1.Continue
  commentId: M:nORM.Enterprise.InterceptionResult`1.Continue
  id: Continue
  parent: nORM.Enterprise.InterceptionResult`1
  langs:
  - csharp
  - vb
  name: Continue()
  nameWithType: InterceptionResult<T>.Continue()
  fullName: nORM.Enterprise.InterceptionResult<T>.Continue()
  type: Method
  source:
    remote:
      path: src/nORM/Enterprise/InterceptionResult.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Continue
    path: src/nORM/Enterprise/InterceptionResult.cs
    startLine: 26
  assemblies:
  - nORM
  namespace: nORM.Enterprise
  summary: Returns an <xref href="nORM.Enterprise.InterceptionResult%601" data-throw-if-not-resolved="false"></xref> that allows the operation to continue normally.
  example: []
  syntax:
    content: public static InterceptionResult<T> Continue()
    return:
      type: nORM.Enterprise.InterceptionResult`1
    content.vb: Public Shared Function [Continue]() As InterceptionResult(Of T)
  overload: nORM.Enterprise.InterceptionResult`1.Continue*
  nameWithType.vb: InterceptionResult(Of T).Continue()
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T).Continue()
- uid: nORM.Enterprise.InterceptionResult`1.SuppressWithResult(`0)
  commentId: M:nORM.Enterprise.InterceptionResult`1.SuppressWithResult(`0)
  id: SuppressWithResult(`0)
  parent: nORM.Enterprise.InterceptionResult`1
  langs:
  - csharp
  - vb
  name: SuppressWithResult(T)
  nameWithType: InterceptionResult<T>.SuppressWithResult(T)
  fullName: nORM.Enterprise.InterceptionResult<T>.SuppressWithResult(T)
  type: Method
  source:
    remote:
      path: src/nORM/Enterprise/InterceptionResult.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: SuppressWithResult
    path: src/nORM/Enterprise/InterceptionResult.cs
    startLine: 32
  assemblies:
  - nORM
  namespace: nORM.Enterprise
  summary: Creates an <xref href="nORM.Enterprise.InterceptionResult%601" data-throw-if-not-resolved="false"></xref> that suppresses the operation and returns the provided result.
  example: []
  syntax:
    content: public static InterceptionResult<T> SuppressWithResult(T result)
    parameters:
    - id: result
      type: '{T}'
      description: The result to return instead of executing the operation.
    return:
      type: nORM.Enterprise.InterceptionResult`1
    content.vb: Public Shared Function SuppressWithResult(result As T) As InterceptionResult(Of T)
  overload: nORM.Enterprise.InterceptionResult`1.SuppressWithResult*
  nameWithType.vb: InterceptionResult(Of T).SuppressWithResult(T)
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T).SuppressWithResult(T)
references:
- uid: nORM.Enterprise.InterceptionResult`1.IsSuppressed
  commentId: P:nORM.Enterprise.InterceptionResult`1.IsSuppressed
  href: nORM.Enterprise.InterceptionResult-1.html#nORM_Enterprise_InterceptionResult_1_IsSuppressed
  name: IsSuppressed
  nameWithType: InterceptionResult<T>.IsSuppressed
  fullName: nORM.Enterprise.InterceptionResult<T>.IsSuppressed
  nameWithType.vb: InterceptionResult(Of T).IsSuppressed
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T).IsSuppressed
- uid: nORM.Enterprise.InterceptionResult`1.Result
  commentId: P:nORM.Enterprise.InterceptionResult`1.Result
  href: nORM.Enterprise.InterceptionResult-1.html#nORM_Enterprise_InterceptionResult_1_Result
  name: Result
  nameWithType: InterceptionResult<T>.Result
  fullName: nORM.Enterprise.InterceptionResult<T>.Result
  nameWithType.vb: InterceptionResult(Of T).Result
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T).Result
- uid: nORM.Enterprise
  commentId: N:nORM.Enterprise
  href: nORM.html
  name: nORM.Enterprise
  nameWithType: nORM.Enterprise
  fullName: nORM.Enterprise
  spec.csharp:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Enterprise
    name: Enterprise
    href: nORM.Enterprise.html
  spec.vb:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Enterprise
    name: Enterprise
    href: nORM.Enterprise.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: nORM.Enterprise.InterceptionResult`1.IsSuppressed*
  commentId: Overload:nORM.Enterprise.InterceptionResult`1.IsSuppressed
  href: nORM.Enterprise.InterceptionResult-1.html#nORM_Enterprise_InterceptionResult_1_IsSuppressed
  name: IsSuppressed
  nameWithType: InterceptionResult<T>.IsSuppressed
  fullName: nORM.Enterprise.InterceptionResult<T>.IsSuppressed
  nameWithType.vb: InterceptionResult(Of T).IsSuppressed
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T).IsSuppressed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: nORM.Enterprise.InterceptionResult`1.Result*
  commentId: Overload:nORM.Enterprise.InterceptionResult`1.Result
  href: nORM.Enterprise.InterceptionResult-1.html#nORM_Enterprise_InterceptionResult_1_Result
  name: Result
  nameWithType: InterceptionResult<T>.Result
  fullName: nORM.Enterprise.InterceptionResult<T>.Result
  nameWithType.vb: InterceptionResult(Of T).Result
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T).Result
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: nORM.Enterprise.InterceptionResult`1
  commentId: T:nORM.Enterprise.InterceptionResult`1
  parent: nORM.Enterprise
  href: nORM.Enterprise.InterceptionResult-1.html
  name: InterceptionResult<T>
  nameWithType: InterceptionResult<T>
  fullName: nORM.Enterprise.InterceptionResult<T>
  nameWithType.vb: InterceptionResult(Of T)
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T)
  name.vb: InterceptionResult(Of T)
  spec.csharp:
  - uid: nORM.Enterprise.InterceptionResult`1
    name: InterceptionResult
    href: nORM.Enterprise.InterceptionResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: nORM.Enterprise.InterceptionResult`1
    name: InterceptionResult
    href: nORM.Enterprise.InterceptionResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: nORM.Enterprise.InterceptionResult`1.Continue*
  commentId: Overload:nORM.Enterprise.InterceptionResult`1.Continue
  href: nORM.Enterprise.InterceptionResult-1.html#nORM_Enterprise_InterceptionResult_1_Continue
  name: Continue
  nameWithType: InterceptionResult<T>.Continue
  fullName: nORM.Enterprise.InterceptionResult<T>.Continue
  nameWithType.vb: InterceptionResult(Of T).Continue
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T).Continue
- uid: nORM.Enterprise.InterceptionResult`1.SuppressWithResult*
  commentId: Overload:nORM.Enterprise.InterceptionResult`1.SuppressWithResult
  href: nORM.Enterprise.InterceptionResult-1.html#nORM_Enterprise_InterceptionResult_1_SuppressWithResult__0_
  name: SuppressWithResult
  nameWithType: InterceptionResult<T>.SuppressWithResult
  fullName: nORM.Enterprise.InterceptionResult<T>.SuppressWithResult
  nameWithType.vb: InterceptionResult(Of T).SuppressWithResult
  fullName.vb: nORM.Enterprise.InterceptionResult(Of T).SuppressWithResult
