### YamlMime:ManagedReference
items:
- uid: nORM.Navigation.LazyNavigationCollection`1
  commentId: T:nORM.Navigation.LazyNavigationCollection`1
  id: LazyNavigationCollection`1
  parent: nORM.Navigation
  children:
  - nORM.Navigation.LazyNavigationCollection`1.#ctor(System.Object,System.Reflection.PropertyInfo,nORM.Navigation.NavigationContext)
  - nORM.Navigation.LazyNavigationCollection`1.Add(`0)
  - nORM.Navigation.LazyNavigationCollection`1.Clear
  - nORM.Navigation.LazyNavigationCollection`1.Contains(`0)
  - nORM.Navigation.LazyNavigationCollection`1.CopyTo(`0[],System.Int32)
  - nORM.Navigation.LazyNavigationCollection`1.Count
  - nORM.Navigation.LazyNavigationCollection`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  - nORM.Navigation.LazyNavigationCollection`1.GetEnumerator
  - nORM.Navigation.LazyNavigationCollection`1.IndexOf(`0)
  - nORM.Navigation.LazyNavigationCollection`1.Insert(System.Int32,`0)
  - nORM.Navigation.LazyNavigationCollection`1.IsReadOnly
  - nORM.Navigation.LazyNavigationCollection`1.Item(System.Int32)
  - nORM.Navigation.LazyNavigationCollection`1.Remove(`0)
  - nORM.Navigation.LazyNavigationCollection`1.RemoveAt(System.Int32)
  langs:
  - csharp
  - vb
  name: LazyNavigationCollection<T>
  nameWithType: LazyNavigationCollection<T>
  fullName: nORM.Navigation.LazyNavigationCollection<T>
  type: Class
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: LazyNavigationCollection
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 476
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Lazy loading collection that loads data on first enumeration
  example: []
  syntax:
    content: 'public sealed class LazyNavigationCollection<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable, IAsyncEnumerable<T> where T : class'
    typeParameters:
    - id: T
    content.vb: Public NotInheritable Class LazyNavigationCollection(Of T As Class) Implements IList(Of T), ICollection(Of T), IEnumerable(Of T), IEnumerable, IAsyncEnumerable(Of T)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IList{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  - System.Collections.Generic.IAsyncEnumerable{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - nORM.Navigation.LazyNavigationCollection`1.nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Core.DbContext)
  - nORM.Navigation.LazyNavigationCollection`1.nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{{T}},{TProperty}}})
  - nORM.Navigation.LazyNavigationCollection`1.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{{T}},System.Collections.Generic.ICollection{{TProperty}}}},System.Threading.CancellationToken)
  - nORM.Navigation.LazyNavigationCollection`1.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{{T}},{TProperty}}},System.Threading.CancellationToken)
  nameWithType.vb: LazyNavigationCollection(Of T)
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T)
  name.vb: LazyNavigationCollection(Of T)
- uid: nORM.Navigation.LazyNavigationCollection`1.#ctor(System.Object,System.Reflection.PropertyInfo,nORM.Navigation.NavigationContext)
  commentId: M:nORM.Navigation.LazyNavigationCollection`1.#ctor(System.Object,System.Reflection.PropertyInfo,nORM.Navigation.NavigationContext)
  id: '#ctor(System.Object,System.Reflection.PropertyInfo,nORM.Navigation.NavigationContext)'
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: LazyNavigationCollection(object, PropertyInfo, NavigationContext)
  nameWithType: LazyNavigationCollection<T>.LazyNavigationCollection(object, PropertyInfo, NavigationContext)
  fullName: nORM.Navigation.LazyNavigationCollection<T>.LazyNavigationCollection(object, System.Reflection.PropertyInfo, nORM.Navigation.NavigationContext)
  type: Constructor
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: .ctor
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 482
  assemblies:
  - nORM
  namespace: nORM.Navigation
  syntax:
    content: public LazyNavigationCollection(object parent, PropertyInfo property, NavigationContext context)
    parameters:
    - id: parent
      type: System.Object
    - id: property
      type: System.Reflection.PropertyInfo
    - id: context
      type: nORM.Navigation.NavigationContext
    content.vb: Public Sub New(parent As Object, [property] As PropertyInfo, context As NavigationContext)
  overload: nORM.Navigation.LazyNavigationCollection`1.#ctor*
  nameWithType.vb: LazyNavigationCollection(Of T).New(Object, PropertyInfo, NavigationContext)
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).New(Object, System.Reflection.PropertyInfo, nORM.Navigation.NavigationContext)
  name.vb: New(Object, PropertyInfo, NavigationContext)
- uid: nORM.Navigation.LazyNavigationCollection`1.GetEnumerator
  commentId: M:nORM.Navigation.LazyNavigationCollection`1.GetEnumerator
  id: GetEnumerator
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: LazyNavigationCollection<T>.GetEnumerator()
  fullName: nORM.Navigation.LazyNavigationCollection<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: GetEnumerator
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 508
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Returns an enumerator for the collection, loading it if necessary.
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: nORM.Navigation.LazyNavigationCollection`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: LazyNavigationCollection(Of T).GetEnumerator()
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).GetEnumerator()
- uid: nORM.Navigation.LazyNavigationCollection`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.LazyNavigationCollection`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  id: GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: LazyNavigationCollection<T>.GetAsyncEnumerator(CancellationToken)
  fullName: nORM.Navigation.LazyNavigationCollection<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: GetAsyncEnumerator
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 520
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Asynchronously enumerates the items in the collection, ensuring the navigation is loaded.
  example: []
  syntax:
    content: public IAsyncEnumerator<T> GetAsyncEnumerator(CancellationToken ct = default)
    parameters:
    - id: ct
      type: System.Threading.CancellationToken
      description: A cancellation token used to cancel the asynchronous iteration.
    return:
      type: System.Collections.Generic.IAsyncEnumerator{{T}}
      description: An asynchronous enumerator over the collection.
    content.vb: Public Function GetAsyncEnumerator(ct As CancellationToken = Nothing) As IAsyncEnumerator(Of T)
  overload: nORM.Navigation.LazyNavigationCollection`1.GetAsyncEnumerator*
  implements:
  - System.Collections.Generic.IAsyncEnumerable{{T}}.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: LazyNavigationCollection(Of T).GetAsyncEnumerator(CancellationToken)
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
- uid: nORM.Navigation.LazyNavigationCollection`1.Add(`0)
  commentId: M:nORM.Navigation.LazyNavigationCollection`1.Add(`0)
  id: Add(`0)
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: LazyNavigationCollection<T>.Add(T)
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Add(T)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Add
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 533
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Adds an item to the collection, loading it if necessary.
  example: []
  syntax:
    content: public void Add(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Public Sub Add(item As T)
  overload: nORM.Navigation.LazyNavigationCollection`1.Add*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Add({T})
  nameWithType.vb: LazyNavigationCollection(Of T).Add(T)
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Add(T)
- uid: nORM.Navigation.LazyNavigationCollection`1.Clear
  commentId: M:nORM.Navigation.LazyNavigationCollection`1.Clear
  id: Clear
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: LazyNavigationCollection<T>.Clear()
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Clear()
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Clear
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 538
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Clears the collection, loading it if necessary.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: nORM.Navigation.LazyNavigationCollection`1.Clear*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Clear
  nameWithType.vb: LazyNavigationCollection(Of T).Clear()
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Clear()
- uid: nORM.Navigation.LazyNavigationCollection`1.Contains(`0)
  commentId: M:nORM.Navigation.LazyNavigationCollection`1.Contains(`0)
  id: Contains(`0)
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: LazyNavigationCollection<T>.Contains(T)
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Contains(T)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Contains
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 543
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Determines whether the collection contains the specified item, loading it if necessary.
  example: []
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As T) As Boolean
  overload: nORM.Navigation.LazyNavigationCollection`1.Contains*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  nameWithType.vb: LazyNavigationCollection(Of T).Contains(T)
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Contains(T)
- uid: nORM.Navigation.LazyNavigationCollection`1.CopyTo(`0[],System.Int32)
  commentId: M:nORM.Navigation.LazyNavigationCollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], int)
  nameWithType: LazyNavigationCollection<T>.CopyTo(T[], int)
  fullName: nORM.Navigation.LazyNavigationCollection<T>.CopyTo(T[], int)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: CopyTo
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 548
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Copies the elements of the collection to an array, loading it if necessary.
  example: []
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: nORM.Navigation.LazyNavigationCollection`1.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  nameWithType.vb: LazyNavigationCollection(Of T).CopyTo(T(), Integer)
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
- uid: nORM.Navigation.LazyNavigationCollection`1.Remove(`0)
  commentId: M:nORM.Navigation.LazyNavigationCollection`1.Remove(`0)
  id: Remove(`0)
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: LazyNavigationCollection<T>.Remove(T)
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Remove(T)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Remove
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 553
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Removes the first occurrence of a specific object from the collection, loading it if necessary.
  example: []
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As T) As Boolean
  overload: nORM.Navigation.LazyNavigationCollection`1.Remove*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  nameWithType.vb: LazyNavigationCollection(Of T).Remove(T)
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Remove(T)
- uid: nORM.Navigation.LazyNavigationCollection`1.Count
  commentId: P:nORM.Navigation.LazyNavigationCollection`1.Count
  id: Count
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: LazyNavigationCollection<T>.Count
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Count
  type: Property
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Count
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 558
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Gets the number of elements in the collection, loading it if necessary.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: nORM.Navigation.LazyNavigationCollection`1.Count*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Count
  nameWithType.vb: LazyNavigationCollection(Of T).Count
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Count
- uid: nORM.Navigation.LazyNavigationCollection`1.IsReadOnly
  commentId: P:nORM.Navigation.LazyNavigationCollection`1.IsReadOnly
  id: IsReadOnly
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: LazyNavigationCollection<T>.IsReadOnly
  fullName: nORM.Navigation.LazyNavigationCollection<T>.IsReadOnly
  type: Property
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: IsReadOnly
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 560
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Gets a value indicating whether the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: nORM.Navigation.LazyNavigationCollection`1.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{T}}.IsReadOnly
  nameWithType.vb: LazyNavigationCollection(Of T).IsReadOnly
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).IsReadOnly
- uid: nORM.Navigation.LazyNavigationCollection`1.IndexOf(`0)
  commentId: M:nORM.Navigation.LazyNavigationCollection`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: IndexOf(T)
  nameWithType: LazyNavigationCollection<T>.IndexOf(T)
  fullName: nORM.Navigation.LazyNavigationCollection<T>.IndexOf(T)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: IndexOf
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 565
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Searches for the specified object and returns the zero-based index of the first occurrence within the list, loading it if necessary.
  example: []
  syntax:
    content: public int IndexOf(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Int32
    content.vb: Public Function IndexOf(item As T) As Integer
  overload: nORM.Navigation.LazyNavigationCollection`1.IndexOf*
  implements:
  - System.Collections.Generic.IList{{T}}.IndexOf({T})
  nameWithType.vb: LazyNavigationCollection(Of T).IndexOf(T)
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).IndexOf(T)
- uid: nORM.Navigation.LazyNavigationCollection`1.Insert(System.Int32,`0)
  commentId: M:nORM.Navigation.LazyNavigationCollection`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: Insert(int, T)
  nameWithType: LazyNavigationCollection<T>.Insert(int, T)
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Insert(int, T)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Insert
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 570
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Inserts an item to the list at the specified index, loading it if necessary.
  example: []
  syntax:
    content: public void Insert(int index, T item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: '{T}'
    content.vb: Public Sub Insert(index As Integer, item As T)
  overload: nORM.Navigation.LazyNavigationCollection`1.Insert*
  implements:
  - System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  nameWithType.vb: LazyNavigationCollection(Of T).Insert(Integer, T)
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
- uid: nORM.Navigation.LazyNavigationCollection`1.RemoveAt(System.Int32)
  commentId: M:nORM.Navigation.LazyNavigationCollection`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: RemoveAt(int)
  nameWithType: LazyNavigationCollection<T>.RemoveAt(int)
  fullName: nORM.Navigation.LazyNavigationCollection<T>.RemoveAt(int)
  type: Method
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: RemoveAt
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 575
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Removes the list item at the specified index, loading the collection if necessary.
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: nORM.Navigation.LazyNavigationCollection`1.RemoveAt*
  implements:
  - System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  nameWithType.vb: LazyNavigationCollection(Of T).RemoveAt(Integer)
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
- uid: nORM.Navigation.LazyNavigationCollection`1.Item(System.Int32)
  commentId: P:nORM.Navigation.LazyNavigationCollection`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: nORM.Navigation.LazyNavigationCollection`1
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: LazyNavigationCollection<T>.this[int]
  fullName: nORM.Navigation.LazyNavigationCollection<T>.this[int]
  type: Property
  source:
    remote:
      path: src/nORM/Navigation/NavigationPropertyExtensions.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: this[]
    path: src/nORM/Navigation/NavigationPropertyExtensions.cs
    startLine: 577
  assemblies:
  - nORM
  namespace: nORM.Navigation
  summary: Gets or sets the element at the specified index.
  example: []
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: '{T}'
      description: The element at the specified index.
    content.vb: Public Default Property this[](index As Integer) As T
  overload: nORM.Navigation.LazyNavigationCollection`1.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">index</code> is not a valid index in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The property is set and the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IList{{T}}.Item(System.Int32)
  nameWithType.vb: LazyNavigationCollection(Of T).this[](Integer)
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).this[](Integer)
  name.vb: this[](Integer)
references:
- uid: nORM.Navigation
  commentId: N:nORM.Navigation
  href: nORM.html
  name: nORM.Navigation
  nameWithType: nORM.Navigation
  fullName: nORM.Navigation
  spec.csharp:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Navigation
    name: Navigation
    href: nORM.Navigation.html
  spec.vb:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Navigation
    name: Navigation
    href: nORM.Navigation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.IAsyncEnumerable{{T}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Core.DbContext)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  name: EnableLazyLoading<LazyNavigationCollection<T>>(LazyNavigationCollection<T>, DbContext)
  nameWithType: NavigationPropertyExtensions.EnableLazyLoading<LazyNavigationCollection<T>>(LazyNavigationCollection<T>, DbContext)
  fullName: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading<nORM.Navigation.LazyNavigationCollection<T>>(nORM.Navigation.LazyNavigationCollection<T>, nORM.Core.DbContext)
  nameWithType.vb: NavigationPropertyExtensions.EnableLazyLoading(Of LazyNavigationCollection(Of T))(LazyNavigationCollection(Of T), DbContext)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading(Of nORM.Navigation.LazyNavigationCollection(Of T))(nORM.Navigation.LazyNavigationCollection(Of T), nORM.Core.DbContext)
  name.vb: EnableLazyLoading(Of LazyNavigationCollection(Of T))(LazyNavigationCollection(Of T), DbContext)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Navigation.LazyNavigationCollection{`0},nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: <
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Navigation.LazyNavigationCollection{`0},nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{{T}},{TProperty}}})
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  name: IsLoaded<LazyNavigationCollection<T>, TProperty>(LazyNavigationCollection<T>, Expression<Func<LazyNavigationCollection<T>, TProperty>>)
  nameWithType: NavigationPropertyExtensions.IsLoaded<LazyNavigationCollection<T>, TProperty>(LazyNavigationCollection<T>, Expression<Func<LazyNavigationCollection<T>, TProperty>>)
  fullName: nORM.Navigation.NavigationPropertyExtensions.IsLoaded<nORM.Navigation.LazyNavigationCollection<T>, TProperty>(nORM.Navigation.LazyNavigationCollection<T>, System.Linq.Expressions.Expression<System.Func<nORM.Navigation.LazyNavigationCollection<T>, TProperty>>)
  nameWithType.vb: NavigationPropertyExtensions.IsLoaded(Of LazyNavigationCollection(Of T), TProperty)(LazyNavigationCollection(Of T), Expression(Of Func(Of LazyNavigationCollection(Of T), TProperty)))
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.IsLoaded(Of nORM.Navigation.LazyNavigationCollection(Of T), TProperty)(nORM.Navigation.LazyNavigationCollection(Of T), System.Linq.Expressions.Expression(Of System.Func(Of nORM.Navigation.LazyNavigationCollection(Of T), TProperty)))
  name.vb: IsLoaded(Of LazyNavigationCollection(Of T), TProperty)(LazyNavigationCollection(Of T), Expression(Of Func(Of LazyNavigationCollection(Of T), TProperty)))
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(nORM.Navigation.LazyNavigationCollection{`0},System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{`0},``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: <
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(nORM.Navigation.LazyNavigationCollection{`0},System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{`0},``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{{T}},System.Collections.Generic.ICollection{{TProperty}}}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  name: LoadAsync<LazyNavigationCollection<T>, TProperty>(LazyNavigationCollection<T>, Expression<Func<LazyNavigationCollection<T>, ICollection<TProperty>>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<LazyNavigationCollection<T>, TProperty>(LazyNavigationCollection<T>, Expression<Func<LazyNavigationCollection<T>, ICollection<TProperty>>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<nORM.Navigation.LazyNavigationCollection<T>, TProperty>(nORM.Navigation.LazyNavigationCollection<T>, System.Linq.Expressions.Expression<System.Func<nORM.Navigation.LazyNavigationCollection<T>, System.Collections.Generic.ICollection<TProperty>>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of LazyNavigationCollection(Of T), TProperty)(LazyNavigationCollection(Of T), Expression(Of Func(Of LazyNavigationCollection(Of T), ICollection(Of TProperty))), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of nORM.Navigation.LazyNavigationCollection(Of T), TProperty)(nORM.Navigation.LazyNavigationCollection(Of T), System.Linq.Expressions.Expression(Of System.Func(Of nORM.Navigation.LazyNavigationCollection(Of T), System.Collections.Generic.ICollection(Of TProperty))), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of LazyNavigationCollection(Of T), TProperty)(LazyNavigationCollection(Of T), Expression(Of Func(Of LazyNavigationCollection(Of T), ICollection(Of TProperty))), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Navigation.LazyNavigationCollection{`0},System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{`0},System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: <
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Navigation.LazyNavigationCollection{`0},System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{`0},System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{{T}},{TProperty}}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  name: LoadAsync<LazyNavigationCollection<T>, TProperty>(LazyNavigationCollection<T>, Expression<Func<LazyNavigationCollection<T>, TProperty>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<LazyNavigationCollection<T>, TProperty>(LazyNavigationCollection<T>, Expression<Func<LazyNavigationCollection<T>, TProperty>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<nORM.Navigation.LazyNavigationCollection<T>, TProperty>(nORM.Navigation.LazyNavigationCollection<T>, System.Linq.Expressions.Expression<System.Func<nORM.Navigation.LazyNavigationCollection<T>, TProperty>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of LazyNavigationCollection(Of T), TProperty)(LazyNavigationCollection(Of T), Expression(Of Func(Of LazyNavigationCollection(Of T), TProperty)), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of nORM.Navigation.LazyNavigationCollection(Of T), TProperty)(nORM.Navigation.LazyNavigationCollection(Of T), System.Linq.Expressions.Expression(Of System.Func(Of nORM.Navigation.LazyNavigationCollection(Of T), TProperty)), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of LazyNavigationCollection(Of T), TProperty)(LazyNavigationCollection(Of T), Expression(Of Func(Of LazyNavigationCollection(Of T), TProperty)), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Navigation.LazyNavigationCollection{`0},System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{`0},``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: <
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Navigation.LazyNavigationCollection{`0},System.Linq.Expressions.Expression{System.Func{nORM.Navigation.LazyNavigationCollection{`0},``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Navigation.LazyNavigationCollection`1
    name: LazyNavigationCollection
    href: nORM.Navigation.LazyNavigationCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  name: EnableLazyLoading<T>(T, DbContext)
  nameWithType: NavigationPropertyExtensions.EnableLazyLoading<T>(T, DbContext)
  fullName: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading<T>(T, nORM.Core.DbContext)
  nameWithType.vb: NavigationPropertyExtensions.EnableLazyLoading(Of T)(T, DbContext)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading(Of T)(T, nORM.Core.DbContext)
  name.vb: EnableLazyLoading(Of T)(T, DbContext)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
- uid: nORM.Navigation.NavigationPropertyExtensions
  commentId: T:nORM.Navigation.NavigationPropertyExtensions
  parent: nORM.Navigation
  href: nORM.Navigation.NavigationPropertyExtensions.html
  name: NavigationPropertyExtensions
  nameWithType: NavigationPropertyExtensions
  fullName: nORM.Navigation.NavigationPropertyExtensions
- uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExternal: true
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  name: IsLoaded<T, TProperty>(T, Expression<Func<T, TProperty>>)
  nameWithType: NavigationPropertyExtensions.IsLoaded<T, TProperty>(T, Expression<Func<T, TProperty>>)
  fullName: nORM.Navigation.NavigationPropertyExtensions.IsLoaded<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: NavigationPropertyExtensions.IsLoaded(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)))
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.IsLoaded(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: IsLoaded(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  isExternal: true
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  name: LoadAsync<T, TProperty>(T, Expression<Func<T, ICollection<TProperty>>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, Expression<Func<T, ICollection<TProperty>>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.ICollection<TProperty>>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, ICollection(Of TProperty))), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.ICollection(Of TProperty))), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, ICollection(Of TProperty))), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  isExternal: true
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  name: LoadAsync<T, TProperty>(T, Expression<Func<T, TProperty>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, Expression<Func<T, TProperty>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.#ctor*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.#ctor
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1__ctor_System_Object_System_Reflection_PropertyInfo_nORM_Navigation_NavigationContext_
  name: LazyNavigationCollection
  nameWithType: LazyNavigationCollection<T>.LazyNavigationCollection
  fullName: nORM.Navigation.LazyNavigationCollection<T>.LazyNavigationCollection
  nameWithType.vb: LazyNavigationCollection(Of T).New
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).New
  name.vb: New
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: nORM.Navigation.NavigationContext
  commentId: T:nORM.Navigation.NavigationContext
  parent: nORM.Navigation
  href: nORM.Navigation.NavigationContext.html
  name: NavigationContext
  nameWithType: NavigationContext
  fullName: nORM.Navigation.NavigationContext
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: nORM.Navigation.LazyNavigationCollection`1.GetEnumerator*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.GetEnumerator
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_GetEnumerator
  name: GetEnumerator
  nameWithType: LazyNavigationCollection<T>.GetEnumerator
  fullName: nORM.Navigation.LazyNavigationCollection<T>.GetEnumerator
  nameWithType.vb: LazyNavigationCollection(Of T).GetEnumerator
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.GetAsyncEnumerator*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.GetAsyncEnumerator
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_GetAsyncEnumerator_System_Threading_CancellationToken_
  name: GetAsyncEnumerator
  nameWithType: LazyNavigationCollection<T>.GetAsyncEnumerator
  fullName: nORM.Navigation.LazyNavigationCollection<T>.GetAsyncEnumerator
  nameWithType.vb: LazyNavigationCollection(Of T).GetAsyncEnumerator
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).GetAsyncEnumerator
- uid: System.Collections.Generic.IAsyncEnumerable{{T}}.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable{`0}.GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: System.Collections.Generic.IAsyncEnumerable{{T}}
  definition: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1.getasyncenumerator
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of T).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable{`0}.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1.getasyncenumerator
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable{`0}.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1.getasyncenumerator
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IAsyncEnumerator{{T}}
  commentId: T:System.Collections.Generic.IAsyncEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerator-1
  name: IAsyncEnumerator<T>
  nameWithType: IAsyncEnumerator<T>
  fullName: System.Collections.Generic.IAsyncEnumerator<T>
  nameWithType.vb: IAsyncEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of T)
  name.vb: IAsyncEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1.getasyncenumerator
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of T).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1.getasyncenumerator
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1.getasyncenumerator
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Collections.Generic.IAsyncEnumerator`1
  commentId: T:System.Collections.Generic.IAsyncEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerator-1
  name: IAsyncEnumerator<T>
  nameWithType: IAsyncEnumerator<T>
  fullName: System.Collections.Generic.IAsyncEnumerator<T>
  nameWithType.vb: IAsyncEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of T)
  name.vb: IAsyncEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.Add*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.Add
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_Add__0_
  name: Add
  nameWithType: LazyNavigationCollection<T>.Add
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Add
  nameWithType.vb: LazyNavigationCollection(Of T).Add
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Add
- uid: System.Collections.Generic.ICollection{{T}}.Add({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: nORM.Navigation.LazyNavigationCollection`1.Clear*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.Clear
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_Clear
  name: Clear
  nameWithType: LazyNavigationCollection<T>.Clear
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Clear
  nameWithType.vb: LazyNavigationCollection(Of T).Clear
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Clear
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.Contains*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.Contains
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_Contains__0_
  name: Contains
  nameWithType: LazyNavigationCollection<T>.Contains
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Contains
  nameWithType.vb: LazyNavigationCollection(Of T).Contains
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Contains
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.CopyTo*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.CopyTo
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_CopyTo__0___System_Int32_
  name: CopyTo
  nameWithType: LazyNavigationCollection<T>.CopyTo
  fullName: nORM.Navigation.LazyNavigationCollection<T>.CopyTo
  nameWithType.vb: LazyNavigationCollection(Of T).CopyTo
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).CopyTo
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.Remove*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.Remove
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_Remove__0_
  name: Remove
  nameWithType: LazyNavigationCollection<T>.Remove
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Remove
  nameWithType.vb: LazyNavigationCollection(Of T).Remove
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Remove
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.Count*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.Count
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_Count
  name: Count
  nameWithType: LazyNavigationCollection<T>.Count
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Count
  nameWithType.vb: LazyNavigationCollection(Of T).Count
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Count
- uid: System.Collections.Generic.ICollection{{T}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: nORM.Navigation.LazyNavigationCollection`1.IsReadOnly*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.IsReadOnly
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_IsReadOnly
  name: IsReadOnly
  nameWithType: LazyNavigationCollection<T>.IsReadOnly
  fullName: nORM.Navigation.LazyNavigationCollection<T>.IsReadOnly
  nameWithType.vb: LazyNavigationCollection(Of T).IsReadOnly
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: nORM.Navigation.LazyNavigationCollection`1.IndexOf*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.IndexOf
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_IndexOf__0_
  name: IndexOf
  nameWithType: LazyNavigationCollection<T>.IndexOf
  fullName: nORM.Navigation.LazyNavigationCollection<T>.IndexOf
  nameWithType.vb: LazyNavigationCollection(Of T).IndexOf
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).IndexOf
- uid: System.Collections.Generic.IList{{T}}.IndexOf({T})
  commentId: M:System.Collections.Generic.IList{`0}.IndexOf(`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.Insert*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.Insert
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_Insert_System_Int32__0_
  name: Insert
  nameWithType: LazyNavigationCollection<T>.Insert
  fullName: nORM.Navigation.LazyNavigationCollection<T>.Insert
  nameWithType.vb: LazyNavigationCollection(Of T).Insert
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).Insert
- uid: System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  commentId: M:System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: nORM.Navigation.LazyNavigationCollection`1.RemoveAt*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.RemoveAt
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_RemoveAt_System_Int32_
  name: RemoveAt
  nameWithType: LazyNavigationCollection<T>.RemoveAt
  fullName: nORM.Navigation.LazyNavigationCollection<T>.RemoveAt
  nameWithType.vb: LazyNavigationCollection(Of T).RemoveAt
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).RemoveAt
- uid: System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: nORM.Navigation.LazyNavigationCollection`1.Item*
  commentId: Overload:nORM.Navigation.LazyNavigationCollection`1.Item
  href: nORM.Navigation.LazyNavigationCollection-1.html#nORM_Navigation_LazyNavigationCollection_1_Item_System_Int32_
  name: this
  nameWithType: LazyNavigationCollection<T>.this
  fullName: nORM.Navigation.LazyNavigationCollection<T>.this
  nameWithType.vb: LazyNavigationCollection(Of T).this[]
  fullName.vb: nORM.Navigation.LazyNavigationCollection(Of T).this[]
  name.vb: this[]
- uid: System.Collections.Generic.IList{{T}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
