### YamlMime:ManagedReference
items:
- uid: nORM.Internal.ConcurrentLruCache`2
  commentId: T:nORM.Internal.ConcurrentLruCache`2
  id: ConcurrentLruCache`2
  parent: nORM.Internal
  children:
  - nORM.Internal.ConcurrentLruCache`2.#ctor(System.Int32,System.Nullable{System.TimeSpan})
  - nORM.Internal.ConcurrentLruCache`2.Clear
  - nORM.Internal.ConcurrentLruCache`2.GetOrAdd(`0,System.Func{`0,`1})
  - nORM.Internal.ConcurrentLruCache`2.HitRate
  - nORM.Internal.ConcurrentLruCache`2.Hits
  - nORM.Internal.ConcurrentLruCache`2.Misses
  - nORM.Internal.ConcurrentLruCache`2.Set(`0,`1,System.Nullable{System.TimeSpan},System.Collections.Generic.IReadOnlyList{System.String})
  - nORM.Internal.ConcurrentLruCache`2.SetMaxSize(System.Int32)
  - nORM.Internal.ConcurrentLruCache`2.TryGet(`0,`1@)
  langs:
  - csharp
  - vb
  name: ConcurrentLruCache<TKey, TValue>
  nameWithType: ConcurrentLruCache<TKey, TValue>
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>
  type: Class
  source:
    remote:
      path: src/nORM/Internal/ConcurrentLruCache.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: ConcurrentLruCache
    path: src/nORM/Internal/ConcurrentLruCache.cs
    startLine: 13
  assemblies:
  - nORM
  namespace: nORM.Internal
  summary: >-
    Concurrent LRU cache with optional TTL. Expired entries are removed on access.

    Eviction on insert is size-based only (no TTL prune on insert) to minimize churn in hot paths.
  example: []
  syntax:
    content: 'public class ConcurrentLruCache<TKey, TValue> where TKey : notnull'
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: Public Class ConcurrentLruCache(Of TKey, TValue)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - nORM.Internal.ConcurrentLruCache`2.nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Core.DbContext)
  - nORM.Internal.ConcurrentLruCache`2.nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{{TKey},{TValue}},{TProperty}}})
  - nORM.Internal.ConcurrentLruCache`2.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{{TKey},{TValue}},System.Collections.Generic.ICollection{{TProperty}}}},System.Threading.CancellationToken)
  - nORM.Internal.ConcurrentLruCache`2.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{{TKey},{TValue}},{TProperty}}},System.Threading.CancellationToken)
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue)
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue)
  name.vb: ConcurrentLruCache(Of TKey, TValue)
- uid: nORM.Internal.ConcurrentLruCache`2.#ctor(System.Int32,System.Nullable{System.TimeSpan})
  commentId: M:nORM.Internal.ConcurrentLruCache`2.#ctor(System.Int32,System.Nullable{System.TimeSpan})
  id: '#ctor(System.Int32,System.Nullable{System.TimeSpan})'
  parent: nORM.Internal.ConcurrentLruCache`2
  langs:
  - csharp
  - vb
  name: ConcurrentLruCache(int, TimeSpan?)
  nameWithType: ConcurrentLruCache<TKey, TValue>.ConcurrentLruCache(int, TimeSpan?)
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.ConcurrentLruCache(int, System.TimeSpan?)
  type: Constructor
  source:
    remote:
      path: src/nORM/Internal/ConcurrentLruCache.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: .ctor
    path: src/nORM/Internal/ConcurrentLruCache.cs
    startLine: 24
  assemblies:
  - nORM
  namespace: nORM.Internal
  syntax:
    content: public ConcurrentLruCache(int maxSize = 1000, TimeSpan? timeToLive = null)
    parameters:
    - id: maxSize
      type: System.Int32
    - id: timeToLive
      type: System.Nullable{System.TimeSpan}
    content.vb: Public Sub New(maxSize As Integer = 1000, timeToLive As TimeSpan? = Nothing)
  overload: nORM.Internal.ConcurrentLruCache`2.#ctor*
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).New(Integer, TimeSpan?)
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).New(Integer, System.TimeSpan?)
  name.vb: New(Integer, TimeSpan?)
- uid: nORM.Internal.ConcurrentLruCache`2.SetMaxSize(System.Int32)
  commentId: M:nORM.Internal.ConcurrentLruCache`2.SetMaxSize(System.Int32)
  id: SetMaxSize(System.Int32)
  parent: nORM.Internal.ConcurrentLruCache`2
  langs:
  - csharp
  - vb
  name: SetMaxSize(int)
  nameWithType: ConcurrentLruCache<TKey, TValue>.SetMaxSize(int)
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.SetMaxSize(int)
  type: Method
  source:
    remote:
      path: src/nORM/Internal/ConcurrentLruCache.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: SetMaxSize
    path: src/nORM/Internal/ConcurrentLruCache.cs
    startLine: 37
  assemblies:
  - nORM
  namespace: nORM.Internal
  summary: >-
    Sets the maximum number of entries the cache can hold. If the new size is

    smaller than the current number of items, least recently used entries are evicted.
  example: []
  syntax:
    content: public void SetMaxSize(int maxSize)
    parameters:
    - id: maxSize
      type: System.Int32
      description: The new cache capacity.
    content.vb: Public Sub SetMaxSize(maxSize As Integer)
  overload: nORM.Internal.ConcurrentLruCache`2.SetMaxSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown when <code class="paramref">maxSize</code> is less than or equal to zero.
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).SetMaxSize(Integer)
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).SetMaxSize(Integer)
  name.vb: SetMaxSize(Integer)
- uid: nORM.Internal.ConcurrentLruCache`2.Clear
  commentId: M:nORM.Internal.ConcurrentLruCache`2.Clear
  id: Clear
  parent: nORM.Internal.ConcurrentLruCache`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ConcurrentLruCache<TKey, TValue>.Clear()
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.Clear()
  type: Method
  source:
    remote:
      path: src/nORM/Internal/ConcurrentLruCache.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Clear
    path: src/nORM/Internal/ConcurrentLruCache.cs
    startLine: 55
  assemblies:
  - nORM
  namespace: nORM.Internal
  summary: Clears all entries from the cache and resets hit/miss statistics.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: nORM.Internal.ConcurrentLruCache`2.Clear*
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).Clear()
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).Clear()
- uid: nORM.Internal.ConcurrentLruCache`2.TryGet(`0,`1@)
  commentId: M:nORM.Internal.ConcurrentLruCache`2.TryGet(`0,`1@)
  id: TryGet(`0,`1@)
  parent: nORM.Internal.ConcurrentLruCache`2
  langs:
  - csharp
  - vb
  name: TryGet(TKey, out TValue)
  nameWithType: ConcurrentLruCache<TKey, TValue>.TryGet(TKey, out TValue)
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.TryGet(TKey, out TValue)
  type: Method
  source:
    remote:
      path: src/nORM/Internal/ConcurrentLruCache.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: TryGet
    path: src/nORM/Internal/ConcurrentLruCache.cs
    startLine: 73
  assemblies:
  - nORM
  namespace: nORM.Internal
  summary: >-
    Attempts to retrieve a value from the cache. If found and not expired the entry is

    promoted to the most recently used position.
  example: []
  syntax:
    content: public bool TryGet(TKey key, out TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: Key of the cached item.
    - id: value
      type: '{TValue}'
      description: When this method returns, contains the cached value if found.
    return:
      type: System.Boolean
      description: <code>true</code> if the value was found in the cache; otherwise <code>false</code>.
    content.vb: Public Function TryGet(key As TKey, value As TValue) As Boolean
  overload: nORM.Internal.ConcurrentLruCache`2.TryGet*
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).TryGet(TKey, TValue)
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).TryGet(TKey, TValue)
  name.vb: TryGet(TKey, TValue)
- uid: nORM.Internal.ConcurrentLruCache`2.GetOrAdd(`0,System.Func{`0,`1})
  commentId: M:nORM.Internal.ConcurrentLruCache`2.GetOrAdd(`0,System.Func{`0,`1})
  id: GetOrAdd(`0,System.Func{`0,`1})
  parent: nORM.Internal.ConcurrentLruCache`2
  langs:
  - csharp
  - vb
  name: GetOrAdd(TKey, Func<TKey, TValue>)
  nameWithType: ConcurrentLruCache<TKey, TValue>.GetOrAdd(TKey, Func<TKey, TValue>)
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)
  type: Method
  source:
    remote:
      path: src/nORM/Internal/ConcurrentLruCache.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: GetOrAdd
    path: src/nORM/Internal/ConcurrentLruCache.cs
    startLine: 106
  assemblies:
  - nORM
  namespace: nORM.Internal
  summary: Adds or returns existing value. The factory runs only if missing/expired.
  example: []
  syntax:
    content: public TValue GetOrAdd(TKey key, Func<TKey, TValue> valueFactory)
    parameters:
    - id: key
      type: '{TKey}'
    - id: valueFactory
      type: System.Func{{TKey},{TValue}}
    return:
      type: '{TValue}'
    content.vb: Public Function GetOrAdd(key As TKey, valueFactory As Func(Of TKey, TValue)) As TValue
  overload: nORM.Internal.ConcurrentLruCache`2.GetOrAdd*
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).GetOrAdd(TKey, Func(Of TKey, TValue))
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).GetOrAdd(TKey, System.Func(Of TKey, TValue))
  name.vb: GetOrAdd(TKey, Func(Of TKey, TValue))
- uid: nORM.Internal.ConcurrentLruCache`2.Set(`0,`1,System.Nullable{System.TimeSpan},System.Collections.Generic.IReadOnlyList{System.String})
  commentId: M:nORM.Internal.ConcurrentLruCache`2.Set(`0,`1,System.Nullable{System.TimeSpan},System.Collections.Generic.IReadOnlyList{System.String})
  id: Set(`0,`1,System.Nullable{System.TimeSpan},System.Collections.Generic.IReadOnlyList{System.String})
  parent: nORM.Internal.ConcurrentLruCache`2
  langs:
  - csharp
  - vb
  name: Set(TKey, TValue, TimeSpan?, IReadOnlyList<string>?)
  nameWithType: ConcurrentLruCache<TKey, TValue>.Set(TKey, TValue, TimeSpan?, IReadOnlyList<string>?)
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.Set(TKey, TValue, System.TimeSpan?, System.Collections.Generic.IReadOnlyList<string>?)
  type: Method
  source:
    remote:
      path: src/nORM/Internal/ConcurrentLruCache.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Set
    path: src/nORM/Internal/ConcurrentLruCache.cs
    startLine: 120
  assemblies:
  - nORM
  namespace: nORM.Internal
  summary: Sets/replaces a value. TTL override and dependencies are accepted for call-site compatibility.
  example: []
  syntax:
    content: public void Set(TKey key, TValue value, TimeSpan? ttlOverride = null, IReadOnlyList<string>? dependencies = null)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    - id: ttlOverride
      type: System.Nullable{System.TimeSpan}
    - id: dependencies
      type: System.Collections.Generic.IReadOnlyList{System.String}
    content.vb: Public Sub [Set](key As TKey, value As TValue, ttlOverride As TimeSpan? = Nothing, dependencies As IReadOnlyList(Of String) = Nothing)
  overload: nORM.Internal.ConcurrentLruCache`2.Set*
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).Set(TKey, TValue, TimeSpan?, IReadOnlyList(Of String))
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).Set(TKey, TValue, System.TimeSpan?, System.Collections.Generic.IReadOnlyList(Of String))
  name.vb: Set(TKey, TValue, TimeSpan?, IReadOnlyList(Of String))
- uid: nORM.Internal.ConcurrentLruCache`2.Hits
  commentId: P:nORM.Internal.ConcurrentLruCache`2.Hits
  id: Hits
  parent: nORM.Internal.ConcurrentLruCache`2
  langs:
  - csharp
  - vb
  name: Hits
  nameWithType: ConcurrentLruCache<TKey, TValue>.Hits
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.Hits
  type: Property
  source:
    remote:
      path: src/nORM/Internal/ConcurrentLruCache.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Hits
    path: src/nORM/Internal/ConcurrentLruCache.cs
    startLine: 151
  assemblies:
  - nORM
  namespace: nORM.Internal
  syntax:
    content: public long Hits { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property Hits As Long
  overload: nORM.Internal.ConcurrentLruCache`2.Hits*
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).Hits
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).Hits
- uid: nORM.Internal.ConcurrentLruCache`2.Misses
  commentId: P:nORM.Internal.ConcurrentLruCache`2.Misses
  id: Misses
  parent: nORM.Internal.ConcurrentLruCache`2
  langs:
  - csharp
  - vb
  name: Misses
  nameWithType: ConcurrentLruCache<TKey, TValue>.Misses
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.Misses
  type: Property
  source:
    remote:
      path: src/nORM/Internal/ConcurrentLruCache.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: Misses
    path: src/nORM/Internal/ConcurrentLruCache.cs
    startLine: 152
  assemblies:
  - nORM
  namespace: nORM.Internal
  syntax:
    content: public long Misses { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property Misses As Long
  overload: nORM.Internal.ConcurrentLruCache`2.Misses*
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).Misses
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).Misses
- uid: nORM.Internal.ConcurrentLruCache`2.HitRate
  commentId: P:nORM.Internal.ConcurrentLruCache`2.HitRate
  id: HitRate
  parent: nORM.Internal.ConcurrentLruCache`2
  langs:
  - csharp
  - vb
  name: HitRate
  nameWithType: ConcurrentLruCache<TKey, TValue>.HitRate
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.HitRate
  type: Property
  source:
    remote:
      path: src/nORM/Internal/ConcurrentLruCache.cs
      branch: main
      repo: https://github.com/ZilverZtream/nORM.git
    id: HitRate
    path: src/nORM/Internal/ConcurrentLruCache.cs
    startLine: 153
  assemblies:
  - nORM
  namespace: nORM.Internal
  syntax:
    content: public double HitRate { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property HitRate As Double
  overload: nORM.Internal.ConcurrentLruCache`2.HitRate*
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).HitRate
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).HitRate
references:
- uid: nORM.Internal
  commentId: N:nORM.Internal
  href: nORM.html
  name: nORM.Internal
  nameWithType: nORM.Internal
  fullName: nORM.Internal
  spec.csharp:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Internal
    name: Internal
    href: nORM.Internal.html
  spec.vb:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Internal
    name: Internal
    href: nORM.Internal.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: nORM.Internal.ConcurrentLruCache`2.nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Core.DbContext)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  name: EnableLazyLoading<ConcurrentLruCache<TKey, TValue>>(ConcurrentLruCache<TKey, TValue>, DbContext)
  nameWithType: NavigationPropertyExtensions.EnableLazyLoading<ConcurrentLruCache<TKey, TValue>>(ConcurrentLruCache<TKey, TValue>, DbContext)
  fullName: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading<nORM.Internal.ConcurrentLruCache<TKey, TValue>>(nORM.Internal.ConcurrentLruCache<TKey, TValue>, nORM.Core.DbContext)
  nameWithType.vb: NavigationPropertyExtensions.EnableLazyLoading(Of ConcurrentLruCache(Of TKey, TValue))(ConcurrentLruCache(Of TKey, TValue), DbContext)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading(Of nORM.Internal.ConcurrentLruCache(Of TKey, TValue))(nORM.Internal.ConcurrentLruCache(Of TKey, TValue), nORM.Core.DbContext)
  name.vb: EnableLazyLoading(Of ConcurrentLruCache(Of TKey, TValue))(ConcurrentLruCache(Of TKey, TValue), DbContext)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Internal.ConcurrentLruCache{`0,`1},nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: <
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  - name: (
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(nORM.Internal.ConcurrentLruCache{`0,`1},nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: (
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
- uid: nORM.Internal.ConcurrentLruCache`2.nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{{TKey},{TValue}},{TProperty}}})
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  name: IsLoaded<ConcurrentLruCache<TKey, TValue>, TProperty>(ConcurrentLruCache<TKey, TValue>, Expression<Func<ConcurrentLruCache<TKey, TValue>, TProperty>>)
  nameWithType: NavigationPropertyExtensions.IsLoaded<ConcurrentLruCache<TKey, TValue>, TProperty>(ConcurrentLruCache<TKey, TValue>, Expression<Func<ConcurrentLruCache<TKey, TValue>, TProperty>>)
  fullName: nORM.Navigation.NavigationPropertyExtensions.IsLoaded<nORM.Internal.ConcurrentLruCache<TKey, TValue>, TProperty>(nORM.Internal.ConcurrentLruCache<TKey, TValue>, System.Linq.Expressions.Expression<System.Func<nORM.Internal.ConcurrentLruCache<TKey, TValue>, TProperty>>)
  nameWithType.vb: NavigationPropertyExtensions.IsLoaded(Of ConcurrentLruCache(Of TKey, TValue), TProperty)(ConcurrentLruCache(Of TKey, TValue), Expression(Of Func(Of ConcurrentLruCache(Of TKey, TValue), TProperty)))
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.IsLoaded(Of nORM.Internal.ConcurrentLruCache(Of TKey, TValue), TProperty)(nORM.Internal.ConcurrentLruCache(Of TKey, TValue), System.Linq.Expressions.Expression(Of System.Func(Of nORM.Internal.ConcurrentLruCache(Of TKey, TValue), TProperty)))
  name.vb: IsLoaded(Of ConcurrentLruCache(Of TKey, TValue), TProperty)(ConcurrentLruCache(Of TKey, TValue), Expression(Of Func(Of ConcurrentLruCache(Of TKey, TValue), TProperty)))
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(nORM.Internal.ConcurrentLruCache{`0,`1},System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{`0,`1},``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: <
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(nORM.Internal.ConcurrentLruCache{`0,`1},System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{`0,`1},``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: nORM.Internal.ConcurrentLruCache`2.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{{TKey},{TValue}},System.Collections.Generic.ICollection{{TProperty}}}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  name: LoadAsync<ConcurrentLruCache<TKey, TValue>, TProperty>(ConcurrentLruCache<TKey, TValue>, Expression<Func<ConcurrentLruCache<TKey, TValue>, ICollection<TProperty>>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<ConcurrentLruCache<TKey, TValue>, TProperty>(ConcurrentLruCache<TKey, TValue>, Expression<Func<ConcurrentLruCache<TKey, TValue>, ICollection<TProperty>>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<nORM.Internal.ConcurrentLruCache<TKey, TValue>, TProperty>(nORM.Internal.ConcurrentLruCache<TKey, TValue>, System.Linq.Expressions.Expression<System.Func<nORM.Internal.ConcurrentLruCache<TKey, TValue>, System.Collections.Generic.ICollection<TProperty>>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of ConcurrentLruCache(Of TKey, TValue), TProperty)(ConcurrentLruCache(Of TKey, TValue), Expression(Of Func(Of ConcurrentLruCache(Of TKey, TValue), ICollection(Of TProperty))), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of nORM.Internal.ConcurrentLruCache(Of TKey, TValue), TProperty)(nORM.Internal.ConcurrentLruCache(Of TKey, TValue), System.Linq.Expressions.Expression(Of System.Func(Of nORM.Internal.ConcurrentLruCache(Of TKey, TValue), System.Collections.Generic.ICollection(Of TProperty))), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of ConcurrentLruCache(Of TKey, TValue), TProperty)(ConcurrentLruCache(Of TKey, TValue), Expression(Of Func(Of ConcurrentLruCache(Of TKey, TValue), ICollection(Of TProperty))), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Internal.ConcurrentLruCache{`0,`1},System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{`0,`1},System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: <
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Internal.ConcurrentLruCache{`0,`1},System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{`0,`1},System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: nORM.Internal.ConcurrentLruCache`2.nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{{TKey},{TValue}},{TProperty}}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  parent: nORM.Navigation.NavigationPropertyExtensions
  definition: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  name: LoadAsync<ConcurrentLruCache<TKey, TValue>, TProperty>(ConcurrentLruCache<TKey, TValue>, Expression<Func<ConcurrentLruCache<TKey, TValue>, TProperty>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<ConcurrentLruCache<TKey, TValue>, TProperty>(ConcurrentLruCache<TKey, TValue>, Expression<Func<ConcurrentLruCache<TKey, TValue>, TProperty>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<nORM.Internal.ConcurrentLruCache<TKey, TValue>, TProperty>(nORM.Internal.ConcurrentLruCache<TKey, TValue>, System.Linq.Expressions.Expression<System.Func<nORM.Internal.ConcurrentLruCache<TKey, TValue>, TProperty>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of ConcurrentLruCache(Of TKey, TValue), TProperty)(ConcurrentLruCache(Of TKey, TValue), Expression(Of Func(Of ConcurrentLruCache(Of TKey, TValue), TProperty)), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of nORM.Internal.ConcurrentLruCache(Of TKey, TValue), TProperty)(nORM.Internal.ConcurrentLruCache(Of TKey, TValue), System.Linq.Expressions.Expression(Of System.Func(Of nORM.Internal.ConcurrentLruCache(Of TKey, TValue), TProperty)), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of ConcurrentLruCache(Of TKey, TValue), TProperty)(ConcurrentLruCache(Of TKey, TValue), Expression(Of Func(Of ConcurrentLruCache(Of TKey, TValue), TProperty)), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Internal.ConcurrentLruCache{`0,`1},System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{`0,`1},``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: <
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(nORM.Internal.ConcurrentLruCache{`0,`1},System.Linq.Expressions.Expression{System.Func{nORM.Internal.ConcurrentLruCache{`0,`1},``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: nORM.Internal.ConcurrentLruCache`2
    name: ConcurrentLruCache
    href: nORM.Internal.ConcurrentLruCache-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  name: EnableLazyLoading<T>(T, DbContext)
  nameWithType: NavigationPropertyExtensions.EnableLazyLoading<T>(T, DbContext)
  fullName: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading<T>(T, nORM.Core.DbContext)
  nameWithType.vb: NavigationPropertyExtensions.EnableLazyLoading(Of T)(T, DbContext)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading(Of T)(T, nORM.Core.DbContext)
  name.vb: EnableLazyLoading(Of T)(T, DbContext)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.EnableLazyLoading``1(``0,nORM.Core.DbContext)
    name: EnableLazyLoading
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_EnableLazyLoading__1___0_nORM_Core_DbContext_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: nORM.Core.DbContext
    name: DbContext
    href: nORM.Core.DbContext.html
  - name: )
- uid: nORM.Navigation.NavigationPropertyExtensions
  commentId: T:nORM.Navigation.NavigationPropertyExtensions
  parent: nORM.Navigation
  href: nORM.Navigation.NavigationPropertyExtensions.html
  name: NavigationPropertyExtensions
  nameWithType: NavigationPropertyExtensions
  fullName: nORM.Navigation.NavigationPropertyExtensions
- uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExternal: true
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  name: IsLoaded<T, TProperty>(T, Expression<Func<T, TProperty>>)
  nameWithType: NavigationPropertyExtensions.IsLoaded<T, TProperty>(T, Expression<Func<T, TProperty>>)
  fullName: nORM.Navigation.NavigationPropertyExtensions.IsLoaded<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: NavigationPropertyExtensions.IsLoaded(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)))
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.IsLoaded(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: IsLoaded(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.IsLoaded``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: IsLoaded
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_IsLoaded__2___0_System_Linq_Expressions_Expression_System_Func___0___1___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
  isExternal: true
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  name: LoadAsync<T, TProperty>(T, Expression<Func<T, ICollection<TProperty>>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, Expression<Func<T, ICollection<TProperty>>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.ICollection<TProperty>>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, ICollection(Of TProperty))), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.ICollection(Of TProperty))), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, ICollection(Of TProperty))), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{``1}}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_ICollection___1____System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  commentId: M:nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
  isExternal: true
  href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  name: LoadAsync<T, TProperty>(T, Expression<Func<T, TProperty>>, CancellationToken)
  nameWithType: NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, Expression<Func<T, TProperty>>, CancellationToken)
  fullName: nORM.Navigation.NavigationPropertyExtensions.LoadAsync<T, TProperty>(T, System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Threading.CancellationToken)
  nameWithType.vb: NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)), CancellationToken)
  fullName.vb: nORM.Navigation.NavigationPropertyExtensions.LoadAsync(Of T, TProperty)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Threading.CancellationToken)
  name.vb: LoadAsync(Of T, TProperty)(T, Expression(Of Func(Of T, TProperty)), CancellationToken)
  spec.csharp:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: nORM.Navigation.NavigationPropertyExtensions.LoadAsync``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)
    name: LoadAsync
    href: nORM.Navigation.NavigationPropertyExtensions.html#nORM_Navigation_NavigationPropertyExtensions_LoadAsync__2___0_System_Linq_Expressions_Expression_System_Func___0___1___System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: nORM.Navigation
  commentId: N:nORM.Navigation
  href: nORM.html
  name: nORM.Navigation
  nameWithType: nORM.Navigation
  fullName: nORM.Navigation
  spec.csharp:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Navigation
    name: Navigation
    href: nORM.Navigation.html
  spec.vb:
  - uid: nORM
    name: nORM
    href: nORM.html
  - name: .
  - uid: nORM.Navigation
    name: Navigation
    href: nORM.Navigation.html
- uid: nORM.Internal.ConcurrentLruCache`2.#ctor*
  commentId: Overload:nORM.Internal.ConcurrentLruCache`2.#ctor
  href: nORM.Internal.ConcurrentLruCache-2.html#nORM_Internal_ConcurrentLruCache_2__ctor_System_Int32_System_Nullable_System_TimeSpan__
  name: ConcurrentLruCache
  nameWithType: ConcurrentLruCache<TKey, TValue>.ConcurrentLruCache
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.ConcurrentLruCache
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).New
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: nORM.Internal.ConcurrentLruCache`2.SetMaxSize*
  commentId: Overload:nORM.Internal.ConcurrentLruCache`2.SetMaxSize
  href: nORM.Internal.ConcurrentLruCache-2.html#nORM_Internal_ConcurrentLruCache_2_SetMaxSize_System_Int32_
  name: SetMaxSize
  nameWithType: ConcurrentLruCache<TKey, TValue>.SetMaxSize
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.SetMaxSize
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).SetMaxSize
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).SetMaxSize
- uid: nORM.Internal.ConcurrentLruCache`2.Clear*
  commentId: Overload:nORM.Internal.ConcurrentLruCache`2.Clear
  href: nORM.Internal.ConcurrentLruCache-2.html#nORM_Internal_ConcurrentLruCache_2_Clear
  name: Clear
  nameWithType: ConcurrentLruCache<TKey, TValue>.Clear
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.Clear
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).Clear
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).Clear
- uid: nORM.Internal.ConcurrentLruCache`2.TryGet*
  commentId: Overload:nORM.Internal.ConcurrentLruCache`2.TryGet
  href: nORM.Internal.ConcurrentLruCache-2.html#nORM_Internal_ConcurrentLruCache_2_TryGet__0__1__
  name: TryGet
  nameWithType: ConcurrentLruCache<TKey, TValue>.TryGet
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.TryGet
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).TryGet
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).TryGet
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: nORM.Internal.ConcurrentLruCache`2.GetOrAdd*
  commentId: Overload:nORM.Internal.ConcurrentLruCache`2.GetOrAdd
  href: nORM.Internal.ConcurrentLruCache-2.html#nORM_Internal_ConcurrentLruCache_2_GetOrAdd__0_System_Func__0__1__
  name: GetOrAdd
  nameWithType: ConcurrentLruCache<TKey, TValue>.GetOrAdd
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.GetOrAdd
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).GetOrAdd
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).GetOrAdd
- uid: System.Func{{TKey},{TValue}}
  commentId: T:System.Func{`0,`1}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TKey, TValue>
  nameWithType: Func<TKey, TValue>
  fullName: System.Func<TKey, TValue>
  nameWithType.vb: Func(Of TKey, TValue)
  fullName.vb: System.Func(Of TKey, TValue)
  name.vb: Func(Of TKey, TValue)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: nORM.Internal.ConcurrentLruCache`2.Set*
  commentId: Overload:nORM.Internal.ConcurrentLruCache`2.Set
  href: nORM.Internal.ConcurrentLruCache-2.html#nORM_Internal_ConcurrentLruCache_2_Set__0__1_System_Nullable_System_TimeSpan__System_Collections_Generic_IReadOnlyList_System_String__
  name: Set
  nameWithType: ConcurrentLruCache<TKey, TValue>.Set
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.Set
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).Set
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).Set
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<string>
  nameWithType: IReadOnlyList<string>
  fullName: System.Collections.Generic.IReadOnlyList<string>
  nameWithType.vb: IReadOnlyList(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: nORM.Internal.ConcurrentLruCache`2.Hits*
  commentId: Overload:nORM.Internal.ConcurrentLruCache`2.Hits
  href: nORM.Internal.ConcurrentLruCache-2.html#nORM_Internal_ConcurrentLruCache_2_Hits
  name: Hits
  nameWithType: ConcurrentLruCache<TKey, TValue>.Hits
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.Hits
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).Hits
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).Hits
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: nORM.Internal.ConcurrentLruCache`2.Misses*
  commentId: Overload:nORM.Internal.ConcurrentLruCache`2.Misses
  href: nORM.Internal.ConcurrentLruCache-2.html#nORM_Internal_ConcurrentLruCache_2_Misses
  name: Misses
  nameWithType: ConcurrentLruCache<TKey, TValue>.Misses
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.Misses
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).Misses
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).Misses
- uid: nORM.Internal.ConcurrentLruCache`2.HitRate*
  commentId: Overload:nORM.Internal.ConcurrentLruCache`2.HitRate
  href: nORM.Internal.ConcurrentLruCache-2.html#nORM_Internal_ConcurrentLruCache_2_HitRate
  name: HitRate
  nameWithType: ConcurrentLruCache<TKey, TValue>.HitRate
  fullName: nORM.Internal.ConcurrentLruCache<TKey, TValue>.HitRate
  nameWithType.vb: ConcurrentLruCache(Of TKey, TValue).HitRate
  fullName.vb: nORM.Internal.ConcurrentLruCache(Of TKey, TValue).HitRate
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
